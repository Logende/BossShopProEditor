(function(e){function r(r){for(var t,a,s=r[0],l=r[1],p=r[2],_=0,d=[];_<s.length;_++)a=s[_],o[a]&&d.push(o[a][0]),o[a]=0;for(t in l)Object.prototype.hasOwnProperty.call(l,t)&&(e[t]=l[t]);c&&c(r);while(d.length)d.shift()();return i.push.apply(i,p||[]),n()}function n(){for(var e,r=0;r<i.length;r++){for(var n=i[r],t=!0,s=1;s<n.length;s++){var l=n[s];0!==o[l]&&(t=!1)}t&&(i.splice(r--,1),e=a(a.s=n[0]))}return e}var t={},o={app:0},i=[];function a(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,a),n.l=!0,n.exports}a.m=e,a.c=t,a.d=function(e,r,n){a.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:n})},a.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,r){if(1&r&&(e=a(e)),8&r)return e;if(4&r&&"object"===typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var t in e)a.d(n,t,function(r){return e[r]}.bind(null,t));return n},a.n=function(e){var r=e&&e.__esModule?function(){return e["default"]}:function(){return e};return a.d(r,"a",r),r},a.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},a.p="/";var s=window["webpackJsonp"]=window["webpackJsonp"]||[],l=s.push.bind(s);s.push=r,s=s.slice();for(var p=0;p<s.length;p++)r(s[p]);var c=l;i.push([0,"chunk-vendors"]),n()})({0:function(e,r,n){e.exports=n("cd49")},"0d1f":function(e,r){e.exports="    shopitemlist:\r\n      configKey: shop\r\n      type: complexlist\r\n      description: List of BossShopPro shop items.\r\n      default:\r\n        RewardType: item\r\n        PriceType: money\r\n        Price: 15\r\n        Reward:\r\n          - 'type:STONE'\r\n          - 'amount:1'\r\n        MenuItem:\r\n          - '%rewarditem_1%'\r\n          - 'lore:#&eClick to buy for &e$%price%'\r\n        Message: '&aYou''ve purchased &e%reward%&a for &e$%price%'\r\n        InventoryLocation: 1\r\n      elements:\r\n        shopitem:\r\n          type: complex\r\n          deleteable: true\r\n          renameable: true\r\n          description: \"One shop item\"\r\n          properties:\r\n            MenuItem:\r\n              type: simple:item\r\n              description: This is the item shown in the menu GUI. It could also be called icon.\r\n            RewardType:\r\n              type: simple_autocomplete_dependency:rewardtype\r\n              autocomplete: rewardtype\r\n              dependent: Reward\r\n              description: Type of reward the player will receive by clicking this shopitem. For example \"ITEM\".\r\n            Reward:\r\n              type: dependent\r\n              dependency: RewardType\r\n              description: The actual reward. If your RewardType is \"ITEM\" the reward could be for example one diamond pickaxe.\r\n              map:\r\n                bungeecordcommand:\r\n                  type: simple:list_string\r\n                  description: List of commands executed by the BungeeCord server. Requires BungeeCord and a copy of BSP being run as BungeeCord plugin.\r\n                bungeecordserver:\r\n                  type: simple:string\r\n                  description: Name of the BungeeCord server to send the player to. Requires BungeeCord.\r\n                close: \r\n                  type: simple:none\r\n                  description: The shop will be closed. No Reward required.\r\n                command:\r\n                  type: simple:list_string\r\n                  description: 'List of commands executed by the console. Tip: You can use placeholders, like \"%player%\" for the player name.'\r\n                custom:\r\n                  type: simple:none\r\n                  description: Custom Reward using BossShopPro API.\r\n                enchantment:\r\n                  type: simple:string\r\n                  description: Enchantment which will be added to the item in the players main hand.\r\n                exp:\r\n                  type: simple:integer\r\n                  description: EXP level to be added to the player.\r\n                item:\r\n                  name: list_item\r\n                  type: complexlist\r\n                  description: List of items the player will receive.\r\n                  default:\r\n                    - type:STONE\r\n                    - amount:16\r\n                  elements:\r\n                    item:\r\n                      type: simple:item\r\n                      description: One item.\r\n                itemall:\r\n                  type: simple:item\r\n                  description: When clicking this shop item the player will fill his inventory with items of this type. He will pay the defined price for every item.\r\n                money:\r\n                  type: simple:double\r\n                  description: The amount of money the player will receive.\r\n                nothing:\r\n                  type: simple:none\r\n                  description: 'Nothing: No reward will be given to the player.'\r\n                permission:\r\n                  type: simple:list_string\r\n                  description: List of permissions that will be given to the player.\r\n                playercommand:\r\n                  type: simple:list_string\r\n                  description: List of commands that will be executed in the name of the player with the permissions of the player.\r\n                playercommandop:\r\n                  type: simple:list_string\r\n                  description: List of commands that will be executed in the name of the player with the permissions of an Op.\r\n                points:\r\n                  type: simple:double\r\n                  description: Amount of points the player will receive.\r\n                shop:\r\n                  type: simple:string\r\n                  description: The BossShopPro shop the player will be sent to.\r\n                shoppage:\r\n                  type: simple:string\r\n                  description: 'The page of the shop which will be opened. Possible values: <Any page number>, next, previous'\r\n            PriceType:\r\n              type: simple_autocomplete_dependency:pricetype\r\n              autocomplete: pricetype\r\n              dependent: Price\r\n              description: Type of price the player will pay when clicking this shopitem, to receive the reward. For example \"MONEY\".\r\n            Price:\r\n              type: dependent\r\n              dependency: PriceType\r\n              description: The actual price. If your PriceType is \"MONEY\" the price could be for example \"100\".\r\n              map:\r\n                exp:\r\n                  type: simple:integer\r\n                  description: EXP level to be taken from the player.\r\n                item:\r\n                  type: complexlist\r\n                  description: List of items the player will pay.\r\n                  default:\r\n                    - type:STONE\r\n                    - amount:16\r\n                  elements:\r\n                    item:\r\n                      type: simple:item\r\n                      description: One item.\r\n                itemall:\r\n                  type: simple:item\r\n                  description: When clicking this shop item the player will sell all his items of this type. He will receive the defined reward for every item sold.\r\n                money:\r\n                  type: simple:double\r\n                  description: The amount of money the player will pay.\r\n                nothing:\r\n                  type: simple:none\r\n                  description: 'Nothing: No price will be taken from the player.'\r\n                points:\r\n                  type: simple:double\r\n                  description: Amount of points the player will pay.\r\n            Message:\r\n              type: simple:string_formatted\r\n              description: This is the message sent to the player upon a purchase.\r\n            InventoryLocation:\r\n              type: simple:integer\r\n              description: The inventory slot this shop item should be put into. Set this to \"1\" for the first slot and to \"54\" for the last slot of one GUI inventory page. Higher slots are possible too, resulting in the shop item being put into the next page of the GUI menu. Set this to \"0\" if you want the shop item to be put into the first empty slot."},"148c":function(e,r){e.exports="            Condition:\r\n              type: simple:list_string\r\n              optional: true\r\n              description: 'This property is optional. View following page for more information: https://www.spigotmc.org/wiki/bossshoppro-conditions/.'"},"150c":function(e,r,n){},4306:function(e,r){e.exports="    \"Sound.Shop.Click\":\r\n      type: simple:string\r\n      optional: true\r\n      description: 'This property is optional. It allows overwriting the sound effect of the shop, which is played, when a shop item is clicked.'\r\n    \"Sound.Shop.Purchase\":\r\n      type: simple:string\r\n      optional: true\r\n      description: 'This property is optional. It allows overwriting the sound effect of the shop, which is played, when a shop item is purchased.'\r\n    \"Sound.Shop.NoPermission\":\r\n      type: simple:string\r\n      optional: true\r\n      description: 'This property is optional. It allows overwriting the sound effect of the shop, which is played, when a shop item is clicked, but the player does not have enough permissions for it.'\r\n    \"Sound.Shop.NotEnoughMoney\":\r\n      type: simple:string\r\n      optional: true\r\n      description: 'This property is optional. It allows overwriting the sound effect of the shop, which is played, when a shop item is clicked, but the player cannot afford paying the price.'\r\n    \"Sound.Shop.ChangePage\":\r\n      type: simple:string\r\n      optional: true\r\n      description: 'This property is optional. It allows overwriting the sound effect of the shop, which is played, when the page of the shop is changed.'\r\n    \"Sound.Shop.ChangeShop\":\r\n      type: simple:string\r\n      optional: true\r\n      description: 'This property is optional. It allows overwriting the sound effect of the shop, which is played, when the shop is left and an other shop opened.'\r\n    \"Sound.Shop.Open\":\r\n      type: simple:string\r\n      optional: true\r\n      description: 'This property is optional. It allows overwriting the sound effect of the shop, which is played, when the shop is opened.'\r\n    \"Sound.Shop.Close\":\r\n      type: simple:string\r\n      optional: true\r\n      description: 'This property is optional. It allows overwriting the sound effect of the shop, which is played, when the shop is closed.'"},"44df":function(e,r){e.exports="            ExtraPermission:\r\n              type: simple:string\r\n              optional: true\r\n              description: 'This property is optional. If set to a permission, players will require the permission in order to be able to successfully purchase the reward when clicking the item. Otherwise a \"no permission\" message will be sent to the player.'\r\n            HideItemsPlayersDoNotHavePermissionsFor:\r\n              type: simple:boolean\r\n              optional: true\r\n              description: 'This property is optional. If enabled, items with \"ExtraPermission\" set to a permission will be hidden from the player, if the player does not have the required permission. The same effect can be achieved using conditions, which always hide the item if the conditions are not met.'\r\n            AllowUnsafeEnchantments:\r\n              type: simple:boolean\r\n              optional: true\r\n              description: 'This property is optional. If enabled players can use every Enchantment reward on any item.'\r\n            CanPlayersSellItemsWithGreaterEnchants:\r\n              type: simple:boolean\r\n              optional: true\r\n              description: 'This property is optional. If enabled players can sell items with greater enchants than needed to a shop that allows to sell items. That might be helpful when dealing with items with bad enchants, but also might lead to accidently selling items below their worth.'\r\n            CloseShopAfterPurchase:\r\n              type: simple:boolean\r\n              optional: true\r\n              description: 'This property is optional. If enabled the inventory GUI will be closed after a successful purchase.'"},"4f0b":function(e,r){e.exports="pricetype:\r\n  - exp\r\n  - item\r\n  - itemall\r\n  - money\r\n  - nothing\r\n  - points\r\nrewardtype:\r\n  - bungeecordcommand\r\n  - bungeecordserver\r\n  - close\r\n  - command\r\n  - custom\r\n  - enchantment\r\n  - exp\r\n  - item\r\n  - itemall\r\n  - money\r\n  - nothing\r\n  - permission\r\n  - playercommand\r\n  - playercommandop\r\n  - points\r\n  - shop\r\n  - shoppage\r\ninputtype:\r\n  - PLAYER\r\n  - TEXT"},"57fc":function(e,r,n){"use strict";var t=n("5f78"),o=n.n(t);o.a},"5c30":function(e,r){e.exports="- name: Type\r\n  key: type\r\n  content:\r\n  - displayname: Material name\r\n    type: simple_autocomplete:material\r\n    autocomplete: material\r\n    default: STONE\r\n  definition: type:<type>\r\n  infotext: This defines the material of the item. You can for example use 'type:1' or 'type:stone' in order to make your item stone.\r\n- name: Amount\r\n  key: amount\r\n  content:\r\n  - displayname: Item amount\r\n    type: simple:integer\r\n    default: '1'\r\n  definition: amount:<number>\r\n  infotext: The amount of items to receive\r\n- name: Durability\r\n  key: durability\r\n  content:\r\n  - displayname: Durability/Damage\r\n    type: simple:integer\r\n    default: '5'\r\n  definition: durability:<number>\r\n  infotext: Durability does different things. For example it defines the damage of Armor/Weapons/Tools and it defines the color of wool.\r\n- name: Name\r\n  key: name\r\n  content:\r\n  - displayname: Displayname\r\n    type: simple:string_formatted\r\n    default: EpicPotato\r\n  definition: name:<name>\r\n  infotext: The displayed name of the item.\r\n- name: Lore\r\n  key: lore\r\n  content:\r\n  - displayname: Lore\r\n    type: simple:string_formatted\r\n    default: Line1\r\n  definition: lore:<line1#line2#line3>\r\n  infotext: This is the lore of the item. You can use color codes like &4 (=DARK_RED) or &l (= BOLD). You can 'switch' to the next line using '#'.\r\n- name: Enchantment\r\n  key: enchantment\r\n  content:\r\n  - displayname: Enchantment Name\r\n    type: simple_autocomplete:enchantment\r\n    autocomplete: enchantment\r\n    default: SHARPNESS\r\n  - displayname: Level\r\n    type: simple:integer\r\n    default: '3'\r\n  definition: enchantment:<enchantment name>#<level>\r\n  infotext: 'Use this attribute to enchant your item. Example: ''enchantment:sharpness#5'' <- This would add Sharpness V to your item.'\r\n- name: Color\r\n  key: color\r\n  content:\r\n  - displayname: R\r\n    type: simple:integer\r\n    description: Red color value\r\n    default: '64'\r\n  - displayname: G\r\n    type: simple:integer\r\n    description: Green color value\r\n    default: '128'\r\n  - displayname: B\r\n    type: simple:integer\r\n    description: Blue color value\r\n    default: '255'\r\n  definition: color:<red number>#<green number>#<blue number>\r\n  infotext: Use this attribute to dye your item (works with leather armor).\r\n- name: Potion\r\n  key: potion\r\n  content:\r\n  - displayname: Potion name\r\n    type: simple_autocomplete:potion\r\n    autocomplete: potion\r\n    default: MUNDANE\r\n  - displayname: Extended\r\n    type: simple:boolean\r\n    description: Whether the potion should have an extended duration.\r\n    default: 'true'\r\n  - displayname: Upgraded\r\n    type: simple:boolean\r\n    description: Whether the potion should be upgraded and therefor have a stronger effect.\r\n    default: 'false'\r\n  definition: potion:<potion name>#<extended? true/false>#<upgraded? <true/false>\r\n  infotext: This allows you to add vanilla potion effects to items. Can only be used on items which support potioneffects!\r\n- name: Potioneffect\r\n  key: potioneffect\r\n  content:\r\n  - displayname: Potioneffect name\r\n    type: simple_autocomplete:potioneffect\r\n    autocomplete: potioneffect\r\n    default: STRENGTH\r\n  - displayname: Level\r\n    type: simple:integer\r\n    default: '1'\r\n  - displayname: Duration in seconds\r\n    type: simple:integer\r\n    default: '600'\r\n  definition: potioneffect:<potion name>#<level>#<time in seconds>\r\n  infotext: This allows you to add custom potion effects to items. Can only be used on items which support potioneffects!\r\n- name: Playerhead\r\n  key: playerhead\r\n  content:\r\n  - displayname: Player name\r\n    type: simple:string\r\n    default: Herobrine\r\n  definition: playerhead:<name>\r\n  infotext: 'This allows you to set the name of skulls. IMPORTANT: You can only use this attribute on skulls (''type:PLAYER_HEAD'').'\r\n- name: Custom Skull\r\n  key: customskull\r\n  content:\r\n  - displayname: Texture/mojang skin url\r\n    type: simple:string\r\n    default: URL\r\n  definition: customskull:<texture/mojang skin url>\r\n  infotext: This allows you to give skulls custom and fix textures which do not change when a player changes his skin.\r\n- name: Mob Spawner\r\n  key: mobspawner\r\n  content:\r\n  - displayname: Mob name\r\n    type: simple:string\r\n    default: BLAZE\r\n  definition: mobspawner:<mob name>\r\n  infotext: Allows you to make your item a working mobpawner with a pre-set mobtype. Requires the plugin SilkSpawners or EpicSpawners. If you use EpicSpawners use the spawner identifier (defined in your EpicSpawners/spawners.yml file) instead of the Spigot mob name.\r\n- name: Monster Egg\r\n  key: monsteregg\r\n  content:\r\n  - displayname: Mob name\r\n    type: simple:string\r\n    default: BLAZE\r\n  definition: monsteregg:<mob name>\r\n  infotext: Allows making items a working monsteregg with a pre-set mobtype. Requires the plugin SilkSpawners.\r\n- name: Hide Flags\r\n  key: hideflags\r\n  content:\r\n  - displayname: Flags\r\n    type: simple:string\r\n    default: HIDE_ATTRIBUTES#HIDE_ENCHANTS\r\n  definition: hideflags:<flag1#flag2#flag3>\r\n  infotext: Fast way to hide flags.\r\n- name: Book\r\n  key: book\r\n  content:\r\n  - displayname: Title\r\n    type: simple:string_formatted\r\n    default: My awesome Book\r\n  - displayname: Author\r\n    type: simple:string_formatted\r\n    default: Unknown Player\r\n  definition: book:<title>#<author>\r\n  infotext: Adds title and author name to a written book. Supports color codes and symbols.\r\n- name: Book Page\r\n  key: bookpage\r\n  content:\r\n  - displayname: Page\r\n    type: simple:integer\r\n    default: '1'\r\n  - displayname: Text\r\n    type: simple:string_formatted\r\n    default: This is some text.\r\n  definition: bookpage:<page>#<text>\r\n  infotext: Adds text to the given book page. Can be used multiple times per page in order to force a new line.\r\n"},"5f78":function(e,r,n){},"6cef":function(e,r,n){"use strict";var t=n("150c"),o=n.n(t);o.a},7167:function(e,r){e.exports="# This is an example BossShopPro shop.\r\n# You can use the the ConfigEdit panel to edit the raw configuration text\r\n# and the QuickEdit panel for helpful features, like material name auto-complete and many more.\r\n#\r\n# Wiki: https://www.spigotmc.org/wiki/bossshoppro/\r\n#\r\nShopName: shop\r\nsigns:\r\n  text: '[shop]'\r\n  NeedsPermissionToCreateSign: true\r\nDisplayName: '&9&l&nExample Shop'\r\nshop:\r\n  'STONE':\r\n    RewardType: item\r\n    PriceType: money\r\n    Price: 15\r\n    Reward:\r\n    - type:STONE\r\n    - amount:1\r\n    MenuItem:\r\n    - '%rewarditem_1%'\r\n    - lore:#&eClick to buy for &e$%price%\r\n    Message: '&aYou''ve purchased &e%reward%&a for &e$%price%'\r\n    InventoryLocation: 1\r\n    ExtraPermission: ''\r\n  'DIAMOND':\r\n    RewardType: item\r\n    PriceType: money\r\n    Price: 15\r\n    Reward:\r\n    - type:DIAMOND\r\n    - amount:1\r\n    MenuItem:\r\n    - '%rewarditem_1%'\r\n    - lore:#&eClick to buy for &e$%price%\r\n    Message: '&aYou''ve purchased &e%reward%&a for &e$%price%'\r\n    InventoryLocation: 2\r\n    ExtraPermission: ''"},7623:function(e,r){e.exports="enchantment:\r\n  - PROTECTION\r\n  - FIRE_PROTECTION\r\n  - FEATHER_FALLING\r\n  - BLAST_PROTECTION\r\n  - PROJECTILE_PROTECTION\r\n  - RESPIRATION\r\n  - AQUA_AFFINITY\r\n  - THORNS\r\n  - DEPTH_STRIDER\r\n  - FROST_WALKER\r\n  - BINDING_CURSE\r\n  - SHARPNESS\r\n  - SMITE\r\n  - KNOCKBACK\r\n  - FIRE_ASPECT\r\n  - LOOTING\r\n  - SWEEPING\r\n  - EFFICIENCY\r\n  - SILK_TOUCH\r\n  - UNBREAKING\r\n  - FORTUNE\r\n  - POWER\r\n  - PUNCH\r\n  - FLAME\r\n  - INFINITY\r\n  - LUCK_OF_THE_SEA\r\n  - LURE\r\n  - LOYALTY\r\n  - IMPALING\r\n  - RIPTIDE\r\n  - CHANNELING\r\n  - MENDING\r\n  - VANISHING_CURSE\r\npotion:\r\n  - AWKWARD\r\n  - FIRE_RESISTANCE\r\n  - INSTANT_DAMAGE\r\n  - INSTANT_HEAL\r\n  - INVISIBILITY\r\n  - JUMP\r\n  - LUCK\r\n  - MUNDANE\r\n  - NIGHT_VISION\r\n  - POISON\r\n  - REGEN\r\n  - SLOW_FALLING\r\n  - SLOWNESS\r\n  - SPEED\r\n  - STRENGTH\r\n  - THICK\r\n  - TURTLE_MASTER\r\n  - UNCRAFTABLE\r\n  - WATER\r\n  - WATER_BREATHING\r\n  - WEAKNESS\r\npotioneffect:\r\n  - ABSORPTION\r\n  - BLINDNESS\r\n  - CONDUIT_POWER\r\n  - CONFUSION\r\n  - DAMAGE_RESISTANCE\r\n  -\tDOLPHINS_GRACE\r\n  - FAST_DIGGING\r\n  - FIRE_RESISTANCE\r\n  - GLOWING\r\n  - HARM\r\n  - HEAL\r\n  - HUNGER\r\n  - INCREASE_DAMAGE\r\n  - INVISIBILITY\r\n  - JUMP\r\n  - LEVITATION\r\n  - LUCK\r\n  - NIGHT_VISION\r\n  - POISON\r\n  - REGENERATION\r\n  - SATURATION\r\n  - SLOW\r\n  - SLOW_DIGGING\r\n  - SLOW_FALLING\r\n  - SPEED\r\n  - UNLUCK\r\n  - WATER_BREATHING\r\n  - WEAKNESS\r\n  - WITHER\r\nmaterial:\r\n  - acacia_boat\r\n  - acacia_button\r\n  - acacia_door\r\n  - acacia_fence\r\n  - acacia_fence_gate\r\n  - acacia_leaves\r\n  - acacia_log\r\n  - acacia_planks\r\n  - acacia_pressure_plate\r\n  - acacia_sapling\r\n  - acacia_slab\r\n  - acacia_stairs\r\n  - acacia_trapdoor\r\n  - acacia_wood\r\n  - activator_rail\r\n  - air\r\n  - allium\r\n  - andesite\r\n  - anvil\r\n  - apple\r\n  - armor_stand\r\n  - arrow\r\n  - attached_melon_stem\r\n  - attached_pumpkin_stem\r\n  - azure_bluet\r\n  - baked_potato\r\n  - barrier\r\n  - bat_spawn_egg\r\n  - beacon\r\n  - bedrock\r\n  - beef\r\n  - beetroot\r\n  - beetroots\r\n  - beetroot_seeds\r\n  - beetroot_soup\r\n  - birch_boat\r\n  - birch_button\r\n  - birch_door\r\n  - birch_fence\r\n  - birch_fence_gate\r\n  - birch_leaves\r\n  - birch_log\r\n  - birch_planks\r\n  - birch_pressure_plate\r\n  - birch_sapling\r\n  - birch_slab\r\n  - birch_stairs\r\n  - birch_trapdoor\r\n  - birch_wood\r\n  - black_banner\r\n  - black_bed\r\n  - black_carpet\r\n  - black_concrete\r\n  - black_concrete_powder\r\n  - black_glazed_terracotta\r\n  - black_shulker_box\r\n  - black_stained_glass\r\n  - black_stained_glass_pane\r\n  - black_terracotta\r\n  - black_wall_banner\r\n  - black_wool\r\n  - blaze_powder\r\n  - blaze_rod\r\n  - blaze_spawn_egg\r\n  - blue_banner\r\n  - blue_bed\r\n  - blue_carpet\r\n  - blue_concrete\r\n  - blue_concrete_powder\r\n  - blue_glazed_terracotta\r\n  - blue_ice\r\n  - blue_orchid\r\n  - blue_shulker_box\r\n  - blue_stained_glass\r\n  - blue_stained_glass_pane\r\n  - blue_terracotta\r\n  - blue_wall_banner\r\n  - blue_wool\r\n  - bone\r\n  - bone_block\r\n  - bone_meal\r\n  - book\r\n  - bookshelf\r\n  - bow\r\n  - bowl\r\n  - brain_coral\r\n  - brain_coral_block\r\n  - brain_coral_fan\r\n  - brain_coral_wall_fan\r\n  - bread\r\n  - brewing_stand\r\n  - brick\r\n  - bricks\r\n  - brick_slab\r\n  - brick_stairs\r\n  - brown_banner\r\n  - brown_bed\r\n  - brown_carpet\r\n  - brown_concrete\r\n  - brown_concrete_powder\r\n  - brown_glazed_terracotta\r\n  - brown_mushroom\r\n  - brown_mushroom_block\r\n  - brown_shulker_box\r\n  - brown_stained_glass\r\n  - brown_stained_glass_pane\r\n  - brown_terracotta\r\n  - brown_wall_banner\r\n  - brown_wool\r\n  - bubble_column\r\n  - bubble_coral\r\n  - bubble_coral_block\r\n  - bubble_coral_fan\r\n  - bubble_coral_wall_fan\r\n  - bucket\r\n  - cactus\r\n  - cactus_green\r\n  - cake\r\n  - carrot\r\n  - carrots\r\n  - carrot_on_a_stick\r\n  - carved_pumpkin\r\n  - cauldron\r\n  - cave_air\r\n  - cave_spider_spawn_egg\r\n  - chainmail_boots\r\n  - chainmail_chestplate\r\n  - chainmail_helmet\r\n  - chainmail_leggings\r\n  - chain_command_block\r\n  - charcoal\r\n  - chest\r\n  - chest_minecart\r\n  - chicken\r\n  - chicken_spawn_egg\r\n  - chipped_anvil\r\n  - chiseled_quartz_block\r\n  - chiseled_red_sandstone\r\n  - chiseled_sandstone\r\n  - chiseled_stone_bricks\r\n  - chorus_flower\r\n  - chorus_fruit\r\n  - chorus_plant\r\n  - clay\r\n  - clay_ball\r\n  - clock\r\n  - coal\r\n  - coal_block\r\n  - coal_ore\r\n  - coarse_dirt\r\n  - cobblestone\r\n  - cobblestone_slab\r\n  - cobblestone_stairs\r\n  - cobblestone_wall\r\n  - cobweb\r\n  - cocoa\r\n  - cocoa_beans\r\n  - cod\r\n  - cod_bucket\r\n  - cod_spawn_egg\r\n  - command_block\r\n  - command_block_minecart\r\n  - comparator\r\n  - compass\r\n  - conduit\r\n  - cooked_beef\r\n  - cooked_chicken\r\n  - cooked_cod\r\n  - cooked_mutton\r\n  - cooked_porkchop\r\n  - cooked_rabbit\r\n  - cooked_salmon\r\n  - cookie\r\n  - cow_spawn_egg\r\n  - cracked_stone_bricks\r\n  - crafting_table\r\n  - creeper_head\r\n  - creeper_spawn_egg\r\n  - creeper_wall_head\r\n  - cut_red_sandstone\r\n  - cut_sandstone\r\n  - cyan_banner\r\n  - cyan_bed\r\n  - cyan_carpet\r\n  - cyan_concrete\r\n  - cyan_concrete_powder\r\n  - cyan_dye\r\n  - cyan_glazed_terracotta\r\n  - cyan_shulker_box\r\n  - cyan_stained_glass\r\n  - cyan_stained_glass_pane\r\n  - cyan_terracotta\r\n  - cyan_wall_banner\r\n  - cyan_wool\r\n  - damaged_anvil\r\n  - dandelion\r\n  - dandelion_yellow\r\n  - dark_oak_boat\r\n  - dark_oak_button\r\n  - dark_oak_door\r\n  - dark_oak_fence\r\n  - dark_oak_fence_gate\r\n  - dark_oak_leaves\r\n  - dark_oak_log\r\n  - dark_oak_planks\r\n  - dark_oak_pressure_plate\r\n  - dark_oak_sapling\r\n  - dark_oak_slab\r\n  - dark_oak_stairs\r\n  - dark_oak_trapdoor\r\n  - dark_oak_wood\r\n  - dark_prismarine\r\n  - dark_prismarine_slab\r\n  - dark_prismarine_stairs\r\n  - daylight_detector\r\n  - dead_brain_coral_block\r\n  - dead_brain_coral_fan\r\n  - dead_brain_coral_wall_fan\r\n  - dead_bubble_coral_block\r\n  - dead_bubble_coral_fan\r\n  - dead_bubble_coral_wall_fan\r\n  - dead_bush\r\n  - dead_fire_coral_block\r\n  - dead_fire_coral_fan\r\n  - dead_fire_coral_wall_fan\r\n  - dead_horn_coral_block\r\n  - dead_horn_coral_fan\r\n  - dead_horn_coral_wall_fan\r\n  - dead_tube_coral_block\r\n  - dead_tube_coral_fan\r\n  - dead_tube_coral_wall_fan\r\n  - debug_stick\r\n  - detector_rail\r\n  - diamond\r\n  - diamond_axe\r\n  - diamond_block\r\n  - diamond_boots\r\n  - diamond_chestplate\r\n  - diamond_helmet\r\n  - diamond_hoe\r\n  - diamond_horse_armor\r\n  - diamond_leggings\r\n  - diamond_ore\r\n  - diamond_pickaxe\r\n  - diamond_shovel\r\n  - diamond_sword\r\n  - diorite\r\n  - dirt\r\n  - dispenser\r\n  - dolphin_spawn_egg\r\n  - donkey_spawn_egg\r\n  - dragon_breath\r\n  - dragon_egg\r\n  - dragon_head\r\n  - dragon_wall_head\r\n  - dried_kelp\r\n  - dried_kelp_block\r\n  - dropper\r\n  - drowned_spawn_egg\r\n  - egg\r\n  - elder_guardian_spawn_egg\r\n  - elytra\r\n  - emerald\r\n  - emerald_block\r\n  - emerald_ore\r\n  - enchanted_book\r\n  - enchanted_golden_apple\r\n  - enchanting_table\r\n  - enderman_spawn_egg\r\n  - endermite_spawn_egg\r\n  - ender_chest\r\n  - ender_eye\r\n  - ender_pearl\r\n  - end_crystal\r\n  - end_gateway\r\n  - end_portal\r\n  - end_portal_frame\r\n  - end_rod\r\n  - end_stone\r\n  - end_stone_bricks\r\n  - evoker_spawn_egg\r\n  - experience_bottle\r\n  - farmland\r\n  - feather\r\n  - fermented_spider_eye\r\n  - fern\r\n  - filled_map\r\n  - fire\r\n  - firework_rocket\r\n  - firework_star\r\n  - fire_charge\r\n  - fire_coral\r\n  - fire_coral_block\r\n  - fire_coral_fan\r\n  - fire_coral_wall_fan\r\n  - fishing_rod\r\n  - flint\r\n  - flint_and_steel\r\n  - flower_pot\r\n  - frosted_ice\r\n  - furnace\r\n  - furnace_minecart\r\n  - ghast_spawn_egg\r\n  - ghast_tear\r\n  - glass\r\n  - glass_bottle\r\n  - glass_pane\r\n  - glistering_melon_slice\r\n  - glowstone\r\n  - glowstone_dust\r\n  - golden_apple\r\n  - golden_axe\r\n  - golden_boots\r\n  - golden_carrot\r\n  - golden_chestplate\r\n  - golden_helmet\r\n  - golden_hoe\r\n  - golden_horse_armor\r\n  - golden_leggings\r\n  - golden_pickaxe\r\n  - golden_shovel\r\n  - golden_sword\r\n  - gold_block\r\n  - gold_ingot\r\n  - gold_nugget\r\n  - gold_ore\r\n  - granite\r\n  - grass\r\n  - grass_block\r\n  - grass_path\r\n  - gravel\r\n  - gray_banner\r\n  - gray_bed\r\n  - gray_carpet\r\n  - gray_concrete\r\n  - gray_concrete_powder\r\n  - gray_dye\r\n  - gray_glazed_terracotta\r\n  - gray_shulker_box\r\n  - gray_stained_glass\r\n  - gray_stained_glass_pane\r\n  - gray_terracotta\r\n  - gray_wall_banner\r\n  - gray_wool\r\n  - green_banner\r\n  - green_bed\r\n  - green_carpet\r\n  - green_concrete\r\n  - green_concrete_powder\r\n  - green_glazed_terracotta\r\n  - green_shulker_box\r\n  - green_stained_glass\r\n  - green_stained_glass_pane\r\n  - green_terracotta\r\n  - green_wall_banner\r\n  - green_wool\r\n  - guardian_spawn_egg\r\n  - gunpowder\r\n  - hay_block\r\n  - heart_of_the_sea\r\n  - heavy_weighted_pressure_plate\r\n  - hopper\r\n  - hopper_minecart\r\n  - horn_coral\r\n  - horn_coral_block\r\n  - horn_coral_fan\r\n  - horn_coral_wall_fan\r\n  - horse_spawn_egg\r\n  - husk_spawn_egg\r\n  - ice\r\n  - infested_chiseled_stone_bricks\r\n  - infested_cobblestone\r\n  - infested_cracked_stone_bricks\r\n  - infested_mossy_stone_bricks\r\n  - infested_stone\r\n  - infested_stone_bricks\r\n  - ink_sac\r\n  - iron_axe\r\n  - iron_bars\r\n  - iron_block\r\n  - iron_boots\r\n  - iron_chestplate\r\n  - iron_door\r\n  - iron_helmet\r\n  - iron_hoe\r\n  - iron_horse_armor\r\n  - iron_ingot\r\n  - iron_leggings\r\n  - iron_nugget\r\n  - iron_ore\r\n  - iron_pickaxe\r\n  - iron_shovel\r\n  - iron_sword\r\n  - iron_trapdoor\r\n  - item_frame\r\n  - jack_o_lantern\r\n  - jukebox\r\n  - jungle_boat\r\n  - jungle_button\r\n  - jungle_door\r\n  - jungle_fence\r\n  - jungle_fence_gate\r\n  - jungle_leaves\r\n  - jungle_log\r\n  - jungle_planks\r\n  - jungle_pressure_plate\r\n  - jungle_sapling\r\n  - jungle_slab\r\n  - jungle_stairs\r\n  - jungle_trapdoor\r\n  - jungle_wood\r\n  - kelp\r\n  - kelp_plant\r\n  - knowledge_book\r\n  - ladder\r\n  - lapis_block\r\n  - lapis_lazuli\r\n  - lapis_ore\r\n  - large_fern\r\n  - lava\r\n  - lava_bucket\r\n  - lead\r\n  - leather\r\n  - leather_boots\r\n  - leather_chestplate\r\n  - leather_helmet\r\n  - leather_leggings\r\n  - lever\r\n  - light_blue_banner\r\n  - light_blue_bed\r\n  - light_blue_carpet\r\n  - light_blue_concrete\r\n  - light_blue_concrete_powder\r\n  - light_blue_dye\r\n  - light_blue_glazed_terracotta\r\n  - light_blue_shulker_box\r\n  - light_blue_stained_glass\r\n  - light_blue_stained_glass_pane\r\n  - light_blue_terracotta\r\n  - light_blue_wall_banner\r\n  - light_blue_wool\r\n  - light_gray_banner\r\n  - light_gray_bed\r\n  - light_gray_carpet\r\n  - light_gray_concrete\r\n  - light_gray_concrete_powder\r\n  - light_gray_dye\r\n  - light_gray_glazed_terracotta\r\n  - light_gray_shulker_box\r\n  - light_gray_stained_glass\r\n  - light_gray_stained_glass_pane\r\n  - light_gray_terracotta\r\n  - light_gray_wall_banner\r\n  - light_gray_wool\r\n  - light_weighted_pressure_plate\r\n  - lilac\r\n  - lily_pad\r\n  - lime_banner\r\n  - lime_bed\r\n  - lime_carpet\r\n  - lime_concrete\r\n  - lime_concrete_powder\r\n  - lime_dye\r\n  - lime_glazed_terracotta\r\n  - lime_shulker_box\r\n  - lime_stained_glass\r\n  - lime_stained_glass_pane\r\n  - lime_terracotta\r\n  - lime_wall_banner\r\n  - lime_wool\r\n  - lingering_potion\r\n  - llama_spawn_egg\r\n  - magenta_banner\r\n  - magenta_bed\r\n  - magenta_carpet\r\n  - magenta_concrete\r\n  - magenta_concrete_powder\r\n  - magenta_dye\r\n  - magenta_glazed_terracotta\r\n  - magenta_shulker_box\r\n  - magenta_stained_glass\r\n  - magenta_stained_glass_pane\r\n  - magenta_terracotta\r\n  - magenta_wall_banner\r\n  - magenta_wool\r\n  - magma_block\r\n  - magma_cream\r\n  - magma_cube_spawn_egg\r\n  - map\r\n  - melon\r\n  - melon_seeds\r\n  - melon_slice\r\n  - melon_stem\r\n  - milk_bucket\r\n  - minecart\r\n  - mooshroom_spawn_egg\r\n  - mossy_cobblestone\r\n  - mossy_cobblestone_wall\r\n  - mossy_stone_bricks\r\n  - moving_piston\r\n  - mule_spawn_egg\r\n  - mushroom_stem\r\n  - mushroom_stew\r\n  - music_disc_11\r\n  - music_disc_13\r\n  - music_disc_blocks\r\n  - music_disc_cat\r\n  - music_disc_chirp\r\n  - music_disc_far\r\n  - music_disc_mall\r\n  - music_disc_mellohi\r\n  - music_disc_stal\r\n  - music_disc_strad\r\n  - music_disc_wait\r\n  - music_disc_ward\r\n  - mutton\r\n  - mycelium\r\n  - name_tag\r\n  - nautilus_shell\r\n  - netherrack\r\n  - nether_brick\r\n  - nether_bricks\r\n  - nether_brick_fence\r\n  - nether_brick_slab\r\n  - nether_brick_stairs\r\n  - nether_portal\r\n  - nether_quartz_ore\r\n  - nether_star\r\n  - nether_wart\r\n  - nether_wart_block\r\n  - note_block\r\n  - oak_boat\r\n  - oak_button\r\n  - oak_door\r\n  - oak_fence\r\n  - oak_fence_gate\r\n  - oak_leaves\r\n  - oak_log\r\n  - oak_planks\r\n  - oak_pressure_plate\r\n  - oak_sapling\r\n  - oak_slab\r\n  - oak_stairs\r\n  - oak_trapdoor\r\n  - oak_wood\r\n  - observer\r\n  - obsidian\r\n  - ocelot_spawn_egg\r\n  - orange_banner\r\n  - orange_bed\r\n  - orange_carpet\r\n  - orange_concrete\r\n  - orange_concrete_powder\r\n  - orange_dye\r\n  - orange_glazed_terracotta\r\n  - orange_shulker_box\r\n  - orange_stained_glass\r\n  - orange_stained_glass_pane\r\n  - orange_terracotta\r\n  - orange_tulip\r\n  - orange_wall_banner\r\n  - orange_wool\r\n  - oxeye_daisy\r\n  - packed_ice\r\n  - painting\r\n  - paper\r\n  - parrot_spawn_egg\r\n  - peony\r\n  - petrified_oak_slab\r\n  - phantom_membrane\r\n  - phantom_spawn_egg\r\n  - pig_spawn_egg\r\n  - pink_banner\r\n  - pink_bed\r\n  - pink_carpet\r\n  - pink_concrete\r\n  - pink_concrete_powder\r\n  - pink_dye\r\n  - pink_glazed_terracotta\r\n  - pink_shulker_box\r\n  - pink_stained_glass\r\n  - pink_stained_glass_pane\r\n  - pink_terracotta\r\n  - pink_tulip\r\n  - pink_wall_banner\r\n  - pink_wool\r\n  - piston\r\n  - piston_head\r\n  - player_head\r\n  - player_wall_head\r\n  - podzol\r\n  - poisonous_potato\r\n  - polar_bear_spawn_egg\r\n  - polished_andesite\r\n  - polished_diorite\r\n  - polished_granite\r\n  - popped_chorus_fruit\r\n  - poppy\r\n  - porkchop\r\n  - potato\r\n  - potatoes\r\n  - potion\r\n  - potted_acacia_sapling\r\n  - potted_allium\r\n  - potted_azure_bluet\r\n  - potted_birch_sapling\r\n  - potted_blue_orchid\r\n  - potted_brown_mushroom\r\n  - potted_cactus\r\n  - potted_dandelion\r\n  - potted_dark_oak_sapling\r\n  - potted_dead_bush\r\n  - potted_fern\r\n  - potted_jungle_sapling\r\n  - potted_oak_sapling\r\n  - potted_orange_tulip\r\n  - potted_oxeye_daisy\r\n  - potted_pink_tulip\r\n  - potted_poppy\r\n  - potted_red_mushroom\r\n  - potted_red_tulip\r\n  - potted_spruce_sapling\r\n  - potted_white_tulip\r\n  - powered_rail\r\n  - prismarine\r\n  - prismarine_bricks\r\n  - prismarine_brick_slab\r\n  - prismarine_brick_stairs\r\n  - prismarine_crystals\r\n  - prismarine_shard\r\n  - prismarine_slab\r\n  - prismarine_stairs\r\n  - pufferfish\r\n  - pufferfish_bucket\r\n  - pufferfish_spawn_egg\r\n  - pumpkin\r\n  - pumpkin_pie\r\n  - pumpkin_seeds\r\n  - pumpkin_stem\r\n  - purple_banner\r\n  - purple_bed\r\n  - purple_carpet\r\n  - purple_concrete\r\n  - purple_concrete_powder\r\n  - purple_dye\r\n  - purple_glazed_terracotta\r\n  - purple_shulker_box\r\n  - purple_stained_glass\r\n  - purple_stained_glass_pane\r\n  - purple_terracotta\r\n  - purple_wall_banner\r\n  - purple_wool\r\n  - purpur_block\r\n  - purpur_pillar\r\n  - purpur_slab\r\n  - purpur_stairs\r\n  - quartz\r\n  - quartz_block\r\n  - quartz_pillar\r\n  - quartz_slab\r\n  - quartz_stairs\r\n  - rabbit\r\n  - rabbit_foot\r\n  - rabbit_hide\r\n  - rabbit_spawn_egg\r\n  - rabbit_stew\r\n  - rail\r\n  - redstone\r\n  - redstone_block\r\n  - redstone_lamp\r\n  - redstone_ore\r\n  - redstone_torch\r\n  - redstone_wall_torch\r\n  - redstone_wire\r\n  - red_banner\r\n  - red_bed\r\n  - red_carpet\r\n  - red_concrete\r\n  - red_concrete_powder\r\n  - red_glazed_terracotta\r\n  - red_mushroom\r\n  - red_mushroom_block\r\n  - red_nether_bricks\r\n  - red_sand\r\n  - red_sandstone\r\n  - red_sandstone_slab\r\n  - red_sandstone_stairs\r\n  - red_shulker_box\r\n  - red_stained_glass\r\n  - red_stained_glass_pane\r\n  - red_terracotta\r\n  - red_tulip\r\n  - red_wall_banner\r\n  - red_wool\r\n  - repeater\r\n  - repeating_command_block\r\n  - rose_bush\r\n  - rose_red\r\n  - rotten_flesh\r\n  - saddle\r\n  - salmon\r\n  - salmon_bucket\r\n  - salmon_spawn_egg\r\n  - sand\r\n  - sandstone\r\n  - sandstone_slab\r\n  - sandstone_stairs\r\n  - scute\r\n  - seagrass\r\n  - sea_lantern\r\n  - sea_pickle\r\n  - shears\r\n  - sheep_spawn_egg\r\n  - shield\r\n  - shulker_box\r\n  - shulker_shell\r\n  - shulker_spawn_egg\r\n  - sign\r\n  - silverfish_spawn_egg\r\n  - skeleton_horse_spawn_egg\r\n  - skeleton_skull\r\n  - skeleton_spawn_egg\r\n  - skeleton_wall_skull\r\n  - slime_ball\r\n  - slime_block\r\n  - slime_spawn_egg\r\n  - smooth_quartz\r\n  - smooth_red_sandstone\r\n  - smooth_sandstone\r\n  - smooth_stone\r\n  - snow\r\n  - snowball\r\n  - snow_block\r\n  - soul_sand\r\n  - spawner\r\n  - spectral_arrow\r\n  - spider_eye\r\n  - spider_spawn_egg\r\n  - splash_potion\r\n  - sponge\r\n  - spruce_boat\r\n  - spruce_button\r\n  - spruce_door\r\n  - spruce_fence\r\n  - spruce_fence_gate\r\n  - spruce_leaves\r\n  - spruce_log\r\n  - spruce_planks\r\n  - spruce_pressure_plate\r\n  - spruce_sapling\r\n  - spruce_slab\r\n  - spruce_stairs\r\n  - spruce_trapdoor\r\n  - spruce_wood\r\n  - squid_spawn_egg\r\n  - stick\r\n  - sticky_piston\r\n  - stone\r\n  - stone_axe\r\n  - stone_bricks\r\n  - stone_brick_slab\r\n  - stone_brick_stairs\r\n  - stone_button\r\n  - stone_hoe\r\n  - stone_pickaxe\r\n  - stone_pressure_plate\r\n  - stone_shovel\r\n  - stone_slab\r\n  - stone_sword\r\n  - stray_spawn_egg\r\n  - string\r\n  - stripped_acacia_log\r\n  - stripped_acacia_wood\r\n  - stripped_birch_log\r\n  - stripped_birch_wood\r\n  - stripped_dark_oak_log\r\n  - stripped_dark_oak_wood\r\n  - stripped_jungle_log\r\n  - stripped_jungle_wood\r\n  - stripped_oak_log\r\n  - stripped_oak_wood\r\n  - stripped_spruce_log\r\n  - stripped_spruce_wood\r\n  - structure_block\r\n  - structure_void\r\n  - sugar\r\n  - sugar_cane\r\n  - sunflower\r\n  - tall_grass\r\n  - tall_seagrass\r\n  - terracotta\r\n  - tipped_arrow\r\n  - tnt\r\n  - tnt_minecart\r\n  - torch\r\n  - totem_of_undying\r\n  - trapped_chest\r\n  - trident\r\n  - tripwire\r\n  - tripwire_hook\r\n  - tropical_fish\r\n  - tropical_fish_bucket\r\n  - tropical_fish_spawn_egg\r\n  - tube_coral\r\n  - tube_coral_block\r\n  - tube_coral_fan\r\n  - tube_coral_wall_fan\r\n  - turtle_egg\r\n  - turtle_helmet\r\n  - turtle_spawn_egg\r\n  - vex_spawn_egg\r\n  - villager_spawn_egg\r\n  - vindicator_spawn_egg\r\n  - vine\r\n  - void_air\r\n  - wall_sign\r\n  - wall_torch\r\n  - water\r\n  - water_bucket\r\n  - wet_sponge\r\n  - wheat\r\n  - wheat_seeds\r\n  - white_banner\r\n  - white_bed\r\n  - white_carpet\r\n  - white_concrete\r\n  - white_concrete_powder\r\n  - white_glazed_terracotta\r\n  - white_shulker_box\r\n  - white_stained_glass\r\n  - white_stained_glass_pane\r\n  - white_terracotta\r\n  - white_tulip\r\n  - white_wall_banner\r\n  - white_wool\r\n  - witch_spawn_egg\r\n  - wither_skeleton_skull\r\n  - wither_skeleton_spawn_egg\r\n  - wither_skeleton_wall_skull\r\n  - wolf_spawn_egg\r\n  - wooden_axe\r\n  - wooden_hoe\r\n  - wooden_pickaxe\r\n  - wooden_shovel\r\n  - wooden_sword\r\n  - writable_book\r\n  - written_book\r\n  - yellow_banner\r\n  - yellow_bed\r\n  - yellow_carpet\r\n  - yellow_concrete\r\n  - yellow_concrete_powder\r\n  - yellow_glazed_terracotta\r\n  - yellow_shulker_box\r\n  - yellow_stained_glass\r\n  - yellow_stained_glass_pane\r\n  - yellow_terracotta\r\n  - yellow_wall_banner\r\n  - yellow_wool\r\n  - zombie_head\r\n  - zombie_horse_spawn_egg\r\n  - zombie_pigman_spawn_egg\r\n  - zombie_spawn_egg\r\n  - zombie_villager_spawn_egg\r\n  - zombie_wall_head\r\n  - \r\n  - ### Minecraft 1.12\r\n  - \r\n  - air\r\n  - stone\r\n  - grass\r\n  - dirt\r\n  - cobblestone\r\n  - wood\r\n  - sapling\r\n  - bedrock\r\n  - water\r\n  - stationary_water\r\n  - lava\r\n  - stationary_lava\r\n  - sand\r\n  - gravel\r\n  - gold_ore\r\n  - iron_ore\r\n  - coal_ore\r\n  - log\r\n  - leaves\r\n  - sponge\r\n  - glass\r\n  - lapis_ore\r\n  - lapis_block\r\n  - dispenser\r\n  - sandstone\r\n  - note_block\r\n  - bed_block\r\n  - powered_rail\r\n  - detector_rail\r\n  - piston_sticky_base\r\n  - web\r\n  - long_grass\r\n  - dead_bush\r\n  - piston_base\r\n  - piston_extension\r\n  - wool\r\n  - piston_moving_piece\r\n  - yellow_flower\r\n  - red_rose\r\n  - brown_mushroom\r\n  - red_mushroom\r\n  - gold_block\r\n  - iron_block\r\n  - double_step\r\n  - step\r\n  - brick\r\n  - tnt\r\n  - bookshelf\r\n  - mossy_cobblestone\r\n  - obsidian\r\n  - torch\r\n  - fire\r\n  - mob_spawner\r\n  - wood_stairs\r\n  - chest\r\n  - redstone_wire\r\n  - diamond_ore\r\n  - diamond_block\r\n  - workbench\r\n  - crops\r\n  - soil\r\n  - furnace\r\n  - burning_furnace\r\n  - sign_post\r\n  - wooden_door\r\n  - ladder\r\n  - rails\r\n  - cobblestone_stairs\r\n  - wall_sign\r\n  - lever\r\n  - stone_plate\r\n  - iron_door_block\r\n  - wood_plate\r\n  - redstone_ore\r\n  - glowing_redstone_ore\r\n  - redstone_torch_off\r\n  - redstone_torch_on\r\n  - stone_button\r\n  - snow\r\n  - ice\r\n  - snow_block\r\n  - cactus\r\n  - clay\r\n  - sugar_cane_block\r\n  - jukebox\r\n  - fence\r\n  - pumpkin\r\n  - netherrack\r\n  - soul_sand\r\n  - glowstone\r\n  - portal\r\n  - jack_o_lantern\r\n  - cake_block\r\n  - diode_block_off\r\n  - diode_block_on\r\n  - stained_glass\r\n  - trap_door\r\n  - monster_eggs\r\n  - smooth_brick\r\n  - huge_mushroom_1\r\n  - huge_mushroom_2\r\n  - iron_fence\r\n  - thin_glass\r\n  - melon_block\r\n  - pumpkin_stem\r\n  - melon_stem\r\n  - vine\r\n  - fence_gate\r\n  - brick_stairs\r\n  - smooth_stairs\r\n  - mycel\r\n  - water_lily\r\n  - nether_brick\r\n  - nether_fence\r\n  - nether_brick_stairs\r\n  - nether_warts\r\n  - enchantment_table\r\n  - brewing_stand\r\n  - cauldron\r\n  - ender_portal\r\n  - ender_portal_frame\r\n  - ender_stone\r\n  - dragon_egg\r\n  - redstone_lamp_off\r\n  - redstone_lamp_on\r\n  - wood_double_step\r\n  - wood_step\r\n  - cocoa\r\n  - sandstone_stairs\r\n  - emerald_ore\r\n  - ender_chest\r\n  - tripwire_hook\r\n  - tripwire\r\n  - emerald_block\r\n  - spruce_wood_stairs\r\n  - birch_wood_stairs\r\n  - jungle_wood_stairs\r\n  - command\r\n  - beacon\r\n  - cobble_wall\r\n  - flower_pot\r\n  - carrot\r\n  - potato\r\n  - wood_button\r\n  - skull\r\n  - anvil\r\n  - trapped_chest\r\n  - gold_plate\r\n  - iron_plate\r\n  - redstone_comparator_off\r\n  - redstone_comparator_on\r\n  - daylight_detector\r\n  - redstone_block\r\n  - quartz_ore\r\n  - hopper\r\n  - quartz_block\r\n  - quartz_stairs\r\n  - activator_rail\r\n  - dropper\r\n  - stained_clay\r\n  - stained_glass_pane\r\n  - leaves_2\r\n  - log_2\r\n  - acacia_stairs\r\n  - dark_oak_stairs\r\n  - slime_block\r\n  - barrier\r\n  - iron_trapdoor\r\n  - prismarine\r\n  - sea_lantern\r\n  - hay_block\r\n  - carpet\r\n  - hard_clay\r\n  - coal_block\r\n  - packed_ice\r\n  - double_plant\r\n  - standing_banner\r\n  - wall_banner\r\n  - daylight_detector_inverted\r\n  - red_sandstone\r\n  - red_sandstone_stairs\r\n  - double_stone_slab2\r\n  - stone_slab2\r\n  - spruce_fence_gate\r\n  - birch_fence_gate\r\n  - jungle_fence_gate\r\n  - dark_oak_fence_gate\r\n  - acacia_fence_gate\r\n  - spruce_fence\r\n  - birch_fence\r\n  - jungle_fence\r\n  - dark_oak_fence\r\n  - acacia_fence\r\n  - spruce_door\r\n  - birch_door\r\n  - jungle_door\r\n  - acacia_door\r\n  - dark_oak_door\r\n  - end_rod\r\n  - chorus_plant\r\n  - chorus_flower\r\n  - purpur_block\r\n  - purpur_pillar\r\n  - purpur_stairs\r\n  - purpur_double_slab\r\n  - purpur_slab\r\n  - end_bricks\r\n  - beetroot_block\r\n  - grass_path\r\n  - end_gateway\r\n  - command_repeating\r\n  - command_chain\r\n  - frosted_ice\r\n  - magma\r\n  - nether_wart_block\r\n  - red_nether_brick\r\n  - bone_block\r\n  - structure_void\r\n  - observer\r\n  - white_shulker_box\r\n  - orange_shulker_box\r\n  - magenta_shulker_box\r\n  - light_blue_shulker_box\r\n  - yellow_shulker_box\r\n  - lime_shulker_box\r\n  - pink_shulker_box\r\n  - gray_shulker_box\r\n  - silver_shulker_box\r\n  - cyan_shulker_box\r\n  - purple_shulker_box\r\n  - blue_shulker_box\r\n  - brown_shulker_box\r\n  - green_shulker_box\r\n  - red_shulker_box\r\n  - black_shulker_box\r\n  - white_glazed_terracotta\r\n  - orange_glazed_terracotta\r\n  - magenta_glazed_terracotta\r\n  - light_blue_glazed_terracotta\r\n  - yellow_glazed_terracotta\r\n  - lime_glazed_terracotta\r\n  - pink_glazed_terracotta\r\n  - gray_glazed_terracotta\r\n  - silver_glazed_terracotta\r\n  - cyan_glazed_terracotta\r\n  - purple_glazed_terracotta\r\n  - blue_glazed_terracotta\r\n  - brown_glazed_terracotta\r\n  - green_glazed_terracotta\r\n  - red_glazed_terracotta\r\n  - black_glazed_terracotta\r\n  - concrete\r\n  - concrete_powder\r\n  - structure_block\r\n  - iron_spade\r\n  - iron_pickaxe\r\n  - iron_axe\r\n  - flint_and_steel\r\n  - apple\r\n  - bow\r\n  - arrow\r\n  - coal\r\n  - diamond\r\n  - iron_ingot\r\n  - gold_ingot\r\n  - iron_sword\r\n  - wood_sword\r\n  - wood_spade\r\n  - wood_pickaxe\r\n  - wood_axe\r\n  - stone_sword\r\n  - stone_spade\r\n  - stone_pickaxe\r\n  - stone_axe\r\n  - diamond_sword\r\n  - diamond_spade\r\n  - diamond_pickaxe\r\n  - diamond_axe\r\n  - stick\r\n  - bowl\r\n  - mushroom_soup\r\n  - gold_sword\r\n  - gold_spade\r\n  - gold_pickaxe\r\n  - gold_axe\r\n  - string\r\n  - feather\r\n  - sulphur\r\n  - wood_hoe\r\n  - stone_hoe\r\n  - iron_hoe\r\n  - diamond_hoe\r\n  - gold_hoe\r\n  - seeds\r\n  - wheat\r\n  - bread\r\n  - leather_helmet\r\n  - leather_chestplate\r\n  - leather_leggings\r\n  - leather_boots\r\n  - chainmail_helmet\r\n  - chainmail_chestplate\r\n  - chainmail_leggings\r\n  - chainmail_boots\r\n  - iron_helmet\r\n  - iron_chestplate\r\n  - iron_leggings\r\n  - iron_boots\r\n  - diamond_helmet\r\n  - diamond_chestplate\r\n  - diamond_leggings\r\n  - diamond_boots\r\n  - gold_helmet\r\n  - gold_chestplate\r\n  - gold_leggings\r\n  - gold_boots\r\n  - flint\r\n  - pork\r\n  - grilled_pork\r\n  - painting\r\n  - golden_apple\r\n  - sign\r\n  - wood_door\r\n  - bucket\r\n  - water_bucket\r\n  - lava_bucket\r\n  - minecart\r\n  - saddle\r\n  - iron_door\r\n  - redstone\r\n  - snow_ball\r\n  - boat\r\n  - leather\r\n  - milk_bucket\r\n  - clay_brick\r\n  - clay_ball\r\n  - sugar_cane\r\n  - paper\r\n  - book\r\n  - slime_ball\r\n  - storage_minecart\r\n  - powered_minecart\r\n  - egg\r\n  - compass\r\n  - fishing_rod\r\n  - watch\r\n  - glowstone_dust\r\n  - raw_fish\r\n  - cooked_fish\r\n  - ink_sack\r\n  - bone\r\n  - sugar\r\n  - cake\r\n  - bed\r\n  - diode\r\n  - cookie\r\n  - map\r\n  - shears\r\n  - melon\r\n  - pumpkin_seeds\r\n  - melon_seeds\r\n  - raw_beef\r\n  - cooked_beef\r\n  - raw_chicken\r\n  - cooked_chicken\r\n  - rotten_flesh\r\n  - ender_pearl\r\n  - blaze_rod\r\n  - ghast_tear\r\n  - gold_nugget\r\n  - nether_stalk\r\n  - potion\r\n  - glass_bottle\r\n  - spider_eye\r\n  - fermented_spider_eye\r\n  - blaze_powder\r\n  - magma_cream\r\n  - brewing_stand_item\r\n  - cauldron_item\r\n  - eye_of_ender\r\n  - speckled_melon\r\n  - monster_egg\r\n  - exp_bottle\r\n  - fireball\r\n  - book_and_quill\r\n  - written_book\r\n  - emerald\r\n  - item_frame\r\n  - flower_pot_item\r\n  - carrot_item\r\n  - potato_item\r\n  - baked_potato\r\n  - poisonous_potato\r\n  - empty_map\r\n  - golden_carrot\r\n  - skull_item\r\n  - carrot_stick\r\n  - nether_star\r\n  - pumpkin_pie\r\n  - firework\r\n  - firework_charge\r\n  - enchanted_book\r\n  - redstone_comparator\r\n  - nether_brick_item\r\n  - quartz\r\n  - explosive_minecart\r\n  - hopper_minecart\r\n  - prismarine_shard\r\n  - prismarine_crystals\r\n  - rabbit\r\n  - cooked_rabbit\r\n  - rabbit_stew\r\n  - rabbit_foot\r\n  - rabbit_hide\r\n  - armor_stand\r\n  - iron_barding\r\n  - gold_barding\r\n  - diamond_barding\r\n  - leash\r\n  - name_tag\r\n  - command_minecart\r\n  - mutton\r\n  - cooked_mutton\r\n  - banner\r\n  - end_crystal\r\n  - spruce_door_item\r\n  - birch_door_item\r\n  - jungle_door_item\r\n  - acacia_door_item\r\n  - dark_oak_door_item\r\n  - chorus_fruit\r\n  - chorus_fruit_popped\r\n  - beetroot\r\n  - beetroot_seeds\r\n  - beetroot_soup\r\n  - dragons_breath\r\n  - splash_potion\r\n  - spectral_arrow\r\n  - tipped_arrow\r\n  - lingering_potion\r\n  - shield\r\n  - elytra\r\n  - boat_spruce\r\n  - boat_birch\r\n  - boat_jungle\r\n  - boat_acacia\r\n  - boat_dark_oak\r\n  - totem\r\n  - shulker_shell\r\n  - iron_nugget\r\n  - knowledge_book\r\n  - gold_record\r\n  - green_record\r\n  - record_3\r\n  - record_4\r\n  - record_5\r\n  - record_6\r\n  - record_7\r\n  - record_8\r\n  - record_9\r\n  - record_10\r\n  - record_11\r\n  - record_12\r\n  - \r\n  - Minecraft 1.11\r\n  - \r\n  - air\r\n  - stone\r\n  - grass\r\n  - dirt\r\n  - cobblestone\r\n  - wood\r\n  - sapling\r\n  - bedrock\r\n  - water\r\n  - stationary_water\r\n  - lava\r\n  - stationary_lava\r\n  - sand\r\n  - gravel\r\n  - gold_ore\r\n  - iron_ore\r\n  - coal_ore\r\n  - log\r\n  - leaves\r\n  - sponge\r\n  - glass\r\n  - lapis_ore\r\n  - lapis_block\r\n  - dispenser\r\n  - sandstone\r\n  - note_block\r\n  - bed_block\r\n  - powered_rail\r\n  - detector_rail\r\n  - piston_sticky_base\r\n  - web\r\n  - long_grass\r\n  - dead_bush\r\n  - piston_base\r\n  - piston_extension\r\n  - wool\r\n  - piston_moving_piece\r\n  - yellow_flower\r\n  - red_rose\r\n  - brown_mushroom\r\n  - red_mushroom\r\n  - gold_block\r\n  - iron_block\r\n  - double_step\r\n  - step\r\n  - brick\r\n  - tnt\r\n  - bookshelf\r\n  - mossy_cobblestone\r\n  - obsidian\r\n  - torch\r\n  - fire\r\n  - mob_spawner\r\n  - wood_stairs\r\n  - chest\r\n  - redstone_wire\r\n  - diamond_ore\r\n  - diamond_block\r\n  - workbench\r\n  - crops\r\n  - soil\r\n  - furnace\r\n  - burning_furnace\r\n  - sign_post\r\n  - wooden_door\r\n  - ladder\r\n  - rails\r\n  - cobblestone_stairs\r\n  - wall_sign\r\n  - lever\r\n  - stone_plate\r\n  - iron_door_block\r\n  - wood_plate\r\n  - redstone_ore\r\n  - glowing_redstone_ore\r\n  - redstone_torch_off\r\n  - redstone_torch_on\r\n  - stone_button\r\n  - snow\r\n  - ice\r\n  - snow_block\r\n  - cactus\r\n  - clay\r\n  - sugar_cane_block\r\n  - jukebox\r\n  - fence\r\n  - pumpkin\r\n  - netherrack\r\n  - soul_sand\r\n  - glowstone\r\n  - portal\r\n  - jack_o_lantern\r\n  - cake_block\r\n  - diode_block_off\r\n  - diode_block_on\r\n  - stained_glass\r\n  - trap_door\r\n  - monster_eggs\r\n  - smooth_brick\r\n  - huge_mushroom_1\r\n  - huge_mushroom_2\r\n  - iron_fence\r\n  - thin_glass\r\n  - melon_block\r\n  - pumpkin_stem\r\n  - melon_stem\r\n  - vine\r\n  - fence_gate\r\n  - brick_stairs\r\n  - smooth_stairs\r\n  - mycel\r\n  - water_lily\r\n  - nether_brick\r\n  - nether_fence\r\n  - nether_brick_stairs\r\n  - nether_warts\r\n  - enchantment_table\r\n  - brewing_stand\r\n  - cauldron\r\n  - ender_portal\r\n  - ender_portal_frame\r\n  - ender_stone\r\n  - dragon_egg\r\n  - redstone_lamp_off\r\n  - redstone_lamp_on\r\n  - wood_double_step\r\n  - wood_step\r\n  - cocoa\r\n  - sandstone_stairs\r\n  - emerald_ore\r\n  - ender_chest\r\n  - tripwire_hook\r\n  - tripwire\r\n  - emerald_block\r\n  - spruce_wood_stairs\r\n  - birch_wood_stairs\r\n  - jungle_wood_stairs\r\n  - command\r\n  - beacon\r\n  - cobble_wall\r\n  - flower_pot\r\n  - carrot\r\n  - potato\r\n  - wood_button\r\n  - skull\r\n  - anvil\r\n  - trapped_chest\r\n  - gold_plate\r\n  - iron_plate\r\n  - redstone_comparator_off\r\n  - redstone_comparator_on\r\n  - daylight_detector\r\n  - redstone_block\r\n  - quartz_ore\r\n  - hopper\r\n  - quartz_block\r\n  - quartz_stairs\r\n  - activator_rail\r\n  - dropper\r\n  - stained_clay\r\n  - stained_glass_pane\r\n  - leaves_2\r\n  - log_2\r\n  - acacia_stairs\r\n  - dark_oak_stairs\r\n  - slime_block\r\n  - barrier\r\n  - iron_trapdoor\r\n  - prismarine\r\n  - sea_lantern\r\n  - hay_block\r\n  - carpet\r\n  - hard_clay\r\n  - coal_block\r\n  - packed_ice\r\n  - double_plant\r\n  - standing_banner\r\n  - wall_banner\r\n  - daylight_detector_inverted\r\n  - red_sandstone\r\n  - red_sandstone_stairs\r\n  - double_stone_slab2\r\n  - stone_slab2\r\n  - spruce_fence_gate\r\n  - birch_fence_gate\r\n  - jungle_fence_gate\r\n  - dark_oak_fence_gate\r\n  - acacia_fence_gate\r\n  - spruce_fence\r\n  - birch_fence\r\n  - jungle_fence\r\n  - dark_oak_fence\r\n  - acacia_fence\r\n  - spruce_door\r\n  - birch_door\r\n  - jungle_door\r\n  - acacia_door\r\n  - dark_oak_door\r\n  - end_rod\r\n  - chorus_plant\r\n  - chorus_flower\r\n  - purpur_block\r\n  - purpur_pillar\r\n  - purpur_stairs\r\n  - purpur_double_slab\r\n  - purpur_slab\r\n  - end_bricks\r\n  - beetroot_block\r\n  - grass_path\r\n  - end_gateway\r\n  - command_repeating\r\n  - command_chain\r\n  - frosted_ice\r\n  - magma\r\n  - nether_wart_block\r\n  - red_nether_brick\r\n  - bone_block\r\n  - structure_void\r\n  - observer\r\n  - white_shulker_box\r\n  - orange_shulker_box\r\n  - magenta_shulker_box\r\n  - light_blue_shulker_box\r\n  - yellow_shulker_box\r\n  - lime_shulker_box\r\n  - pink_shulker_box\r\n  - gray_shulker_box\r\n  - silver_shulker_box\r\n  - cyan_shulker_box\r\n  - purple_shulker_box\r\n  - blue_shulker_box\r\n  - brown_shulker_box\r\n  - green_shulker_box\r\n  - red_shulker_box\r\n  - black_shulker_box\r\n  - structure_block\r\n  - iron_spade\r\n  - iron_pickaxe\r\n  - iron_axe\r\n  - flint_and_steel\r\n  - apple\r\n  - bow\r\n  - arrow\r\n  - coal\r\n  - diamond\r\n  - iron_ingot\r\n  - gold_ingot\r\n  - iron_sword\r\n  - wood_sword\r\n  - wood_spade\r\n  - wood_pickaxe\r\n  - wood_axe\r\n  - stone_sword\r\n  - stone_spade\r\n  - stone_pickaxe\r\n  - stone_axe\r\n  - diamond_sword\r\n  - diamond_spade\r\n  - diamond_pickaxe\r\n  - diamond_axe\r\n  - stick\r\n  - bowl\r\n  - mushroom_soup\r\n  - gold_sword\r\n  - gold_spade\r\n  - gold_pickaxe\r\n  - gold_axe\r\n  - string\r\n  - feather\r\n  - sulphur\r\n  - wood_hoe\r\n  - stone_hoe\r\n  - iron_hoe\r\n  - diamond_hoe\r\n  - gold_hoe\r\n  - seeds\r\n  - wheat\r\n  - bread\r\n  - leather_helmet\r\n  - leather_chestplate\r\n  - leather_leggings\r\n  - leather_boots\r\n  - chainmail_helmet\r\n  - chainmail_chestplate\r\n  - chainmail_leggings\r\n  - chainmail_boots\r\n  - iron_helmet\r\n  - iron_chestplate\r\n  - iron_leggings\r\n  - iron_boots\r\n  - diamond_helmet\r\n  - diamond_chestplate\r\n  - diamond_leggings\r\n  - diamond_boots\r\n  - gold_helmet\r\n  - gold_chestplate\r\n  - gold_leggings\r\n  - gold_boots\r\n  - flint\r\n  - pork\r\n  - grilled_pork\r\n  - painting\r\n  - golden_apple\r\n  - sign\r\n  - wood_door\r\n  - bucket\r\n  - water_bucket\r\n  - lava_bucket\r\n  - minecart\r\n  - saddle\r\n  - iron_door\r\n  - redstone\r\n  - snow_ball\r\n  - boat\r\n  - leather\r\n  - milk_bucket\r\n  - clay_brick\r\n  - clay_ball\r\n  - sugar_cane\r\n  - paper\r\n  - book\r\n  - slime_ball\r\n  - storage_minecart\r\n  - powered_minecart\r\n  - egg\r\n  - compass\r\n  - fishing_rod\r\n  - watch\r\n  - glowstone_dust\r\n  - raw_fish\r\n  - cooked_fish\r\n  - ink_sack\r\n  - bone\r\n  - sugar\r\n  - cake\r\n  - bed\r\n  - diode\r\n  - cookie\r\n  - map\r\n  - shears\r\n  - melon\r\n  - pumpkin_seeds\r\n  - melon_seeds\r\n  - raw_beef\r\n  - cooked_beef\r\n  - raw_chicken\r\n  - cooked_chicken\r\n  - rotten_flesh\r\n  - ender_pearl\r\n  - blaze_rod\r\n  - ghast_tear\r\n  - gold_nugget\r\n  - nether_stalk\r\n  - potion\r\n  - glass_bottle\r\n  - spider_eye\r\n  - fermented_spider_eye\r\n  - blaze_powder\r\n  - magma_cream\r\n  - brewing_stand_item\r\n  - cauldron_item\r\n  - eye_of_ender\r\n  - speckled_melon\r\n  - monster_egg\r\n  - exp_bottle\r\n  - fireball\r\n  - book_and_quill\r\n  - written_book\r\n  - emerald\r\n  - item_frame\r\n  - flower_pot_item\r\n  - carrot_item\r\n  - potato_item\r\n  - baked_potato\r\n  - poisonous_potato\r\n  - empty_map\r\n  - golden_carrot\r\n  - skull_item\r\n  - carrot_stick\r\n  - nether_star\r\n  - pumpkin_pie\r\n  - firework\r\n  - firework_charge\r\n  - enchanted_book\r\n  - redstone_comparator\r\n  - nether_brick_item\r\n  - quartz\r\n  - explosive_minecart\r\n  - hopper_minecart\r\n  - prismarine_shard\r\n  - prismarine_crystals\r\n  - rabbit\r\n  - cooked_rabbit\r\n  - rabbit_stew\r\n  - rabbit_foot\r\n  - rabbit_hide\r\n  - armor_stand\r\n  - iron_barding\r\n  - gold_barding\r\n  - diamond_barding\r\n  - leash\r\n  - name_tag\r\n  - command_minecart\r\n  - mutton\r\n  - cooked_mutton\r\n  - banner\r\n  - end_crystal\r\n  - spruce_door_item\r\n  - birch_door_item\r\n  - jungle_door_item\r\n  - acacia_door_item\r\n  - dark_oak_door_item\r\n  - chorus_fruit\r\n  - chorus_fruit_popped\r\n  - beetroot\r\n  - beetroot_seeds\r\n  - beetroot_soup\r\n  - dragons_breath\r\n  - splash_potion\r\n  - spectral_arrow\r\n  - tipped_arrow\r\n  - lingering_potion\r\n  - shield\r\n  - elytra\r\n  - boat_spruce\r\n  - boat_birch\r\n  - boat_jungle\r\n  - boat_acacia\r\n  - boat_dark_oak\r\n  - totem\r\n  - shulker_shell\r\n  - gold_record\r\n  - green_record\r\n  - record_3\r\n  - record_4\r\n  - record_5\r\n  - record_6\r\n  - record_7\r\n  - record_8\r\n  - record_9\r\n  - record_10\r\n  - record_11\r\n  - record_12\r\n  - \r\n  - ### Minecraft 1.10\r\n  - \r\n  - air\r\n  - stone\r\n  - grass\r\n  - dirt\r\n  - cobblestone\r\n  - wood\r\n  - sapling\r\n  - bedrock\r\n  - water\r\n  - stationary_water\r\n  - lava\r\n  - stationary_lava\r\n  - sand\r\n  - gravel\r\n  - gold_ore\r\n  - iron_ore\r\n  - coal_ore\r\n  - log\r\n  - leaves\r\n  - sponge\r\n  - glass\r\n  - lapis_ore\r\n  - lapis_block\r\n  - dispenser\r\n  - sandstone\r\n  - note_block\r\n  - bed_block\r\n  - powered_rail\r\n  - detector_rail\r\n  - piston_sticky_base\r\n  - web\r\n  - long_grass\r\n  - dead_bush\r\n  - piston_base\r\n  - piston_extension\r\n  - wool\r\n  - piston_moving_piece\r\n  - yellow_flower\r\n  - red_rose\r\n  - brown_mushroom\r\n  - red_mushroom\r\n  - gold_block\r\n  - iron_block\r\n  - double_step\r\n  - step\r\n  - brick\r\n  - tnt\r\n  - bookshelf\r\n  - mossy_cobblestone\r\n  - obsidian\r\n  - torch\r\n  - fire\r\n  - mob_spawner\r\n  - wood_stairs\r\n  - chest\r\n  - redstone_wire\r\n  - diamond_ore\r\n  - diamond_block\r\n  - workbench\r\n  - crops\r\n  - soil\r\n  - furnace\r\n  - burning_furnace\r\n  - sign_post\r\n  - wooden_door\r\n  - ladder\r\n  - rails\r\n  - cobblestone_stairs\r\n  - wall_sign\r\n  - lever\r\n  - stone_plate\r\n  - iron_door_block\r\n  - wood_plate\r\n  - redstone_ore\r\n  - glowing_redstone_ore\r\n  - redstone_torch_off\r\n  - redstone_torch_on\r\n  - stone_button\r\n  - snow\r\n  - ice\r\n  - snow_block\r\n  - cactus\r\n  - clay\r\n  - sugar_cane_block\r\n  - jukebox\r\n  - fence\r\n  - pumpkin\r\n  - netherrack\r\n  - soul_sand\r\n  - glowstone\r\n  - portal\r\n  - jack_o_lantern\r\n  - cake_block\r\n  - diode_block_off\r\n  - diode_block_on\r\n  - stained_glass\r\n  - trap_door\r\n  - monster_eggs\r\n  - smooth_brick\r\n  - huge_mushroom_1\r\n  - huge_mushroom_2\r\n  - iron_fence\r\n  - thin_glass\r\n  - melon_block\r\n  - pumpkin_stem\r\n  - melon_stem\r\n  - vine\r\n  - fence_gate\r\n  - brick_stairs\r\n  - smooth_stairs\r\n  - mycel\r\n  - water_lily\r\n  - nether_brick\r\n  - nether_fence\r\n  - nether_brick_stairs\r\n  - nether_warts\r\n  - enchantment_table\r\n  - brewing_stand\r\n  - cauldron\r\n  - ender_portal\r\n  - ender_portal_frame\r\n  - ender_stone\r\n  - dragon_egg\r\n  - redstone_lamp_off\r\n  - redstone_lamp_on\r\n  - wood_double_step\r\n  - wood_step\r\n  - cocoa\r\n  - sandstone_stairs\r\n  - emerald_ore\r\n  - ender_chest\r\n  - tripwire_hook\r\n  - tripwire\r\n  - emerald_block\r\n  - spruce_wood_stairs\r\n  - birch_wood_stairs\r\n  - jungle_wood_stairs\r\n  - command\r\n  - beacon\r\n  - cobble_wall\r\n  - flower_pot\r\n  - carrot\r\n  - potato\r\n  - wood_button\r\n  - skull\r\n  - anvil\r\n  - trapped_chest\r\n  - gold_plate\r\n  - iron_plate\r\n  - redstone_comparator_off\r\n  - redstone_comparator_on\r\n  - daylight_detector\r\n  - redstone_block\r\n  - quartz_ore\r\n  - hopper\r\n  - quartz_block\r\n  - quartz_stairs\r\n  - activator_rail\r\n  - dropper\r\n  - stained_clay\r\n  - stained_glass_pane\r\n  - leaves_2\r\n  - log_2\r\n  - acacia_stairs\r\n  - dark_oak_stairs\r\n  - slime_block\r\n  - barrier\r\n  - iron_trapdoor\r\n  - prismarine\r\n  - sea_lantern\r\n  - hay_block\r\n  - carpet\r\n  - hard_clay\r\n  - coal_block\r\n  - packed_ice\r\n  - double_plant\r\n  - standing_banner\r\n  - wall_banner\r\n  - daylight_detector_inverted\r\n  - red_sandstone\r\n  - red_sandstone_stairs\r\n  - double_stone_slab2\r\n  - stone_slab2\r\n  - spruce_fence_gate\r\n  - birch_fence_gate\r\n  - jungle_fence_gate\r\n  - dark_oak_fence_gate\r\n  - acacia_fence_gate\r\n  - spruce_fence\r\n  - birch_fence\r\n  - jungle_fence\r\n  - dark_oak_fence\r\n  - acacia_fence\r\n  - spruce_door\r\n  - birch_door\r\n  - jungle_door\r\n  - acacia_door\r\n  - dark_oak_door\r\n  - end_rod\r\n  - chorus_plant\r\n  - chorus_flower\r\n  - purpur_block\r\n  - purpur_pillar\r\n  - purpur_stairs\r\n  - purpur_double_slab\r\n  - purpur_slab\r\n  - end_bricks\r\n  - beetroot_block\r\n  - grass_path\r\n  - end_gateway\r\n  - command_repeating\r\n  - command_chain\r\n  - frosted_ice\r\n  - magma\r\n  - nether_wart_block\r\n  - red_nether_brick\r\n  - bone_block\r\n  - structure_void\r\n  - structure_block\r\n  - iron_spade\r\n  - iron_pickaxe\r\n  - iron_axe\r\n  - flint_and_steel\r\n  - apple\r\n  - bow\r\n  - arrow\r\n  - coal\r\n  - diamond\r\n  - iron_ingot\r\n  - gold_ingot\r\n  - iron_sword\r\n  - wood_sword\r\n  - wood_spade\r\n  - wood_pickaxe\r\n  - wood_axe\r\n  - stone_sword\r\n  - stone_spade\r\n  - stone_pickaxe\r\n  - stone_axe\r\n  - diamond_sword\r\n  - diamond_spade\r\n  - diamond_pickaxe\r\n  - diamond_axe\r\n  - stick\r\n  - bowl\r\n  - mushroom_soup\r\n  - gold_sword\r\n  - gold_spade\r\n  - gold_pickaxe\r\n  - gold_axe\r\n  - string\r\n  - feather\r\n  - sulphur\r\n  - wood_hoe\r\n  - stone_hoe\r\n  - iron_hoe\r\n  - diamond_hoe\r\n  - gold_hoe\r\n  - seeds\r\n  - wheat\r\n  - bread\r\n  - leather_helmet\r\n  - leather_chestplate\r\n  - leather_leggings\r\n  - leather_boots\r\n  - chainmail_helmet\r\n  - chainmail_chestplate\r\n  - chainmail_leggings\r\n  - chainmail_boots\r\n  - iron_helmet\r\n  - iron_chestplate\r\n  - iron_leggings\r\n  - iron_boots\r\n  - diamond_helmet\r\n  - diamond_chestplate\r\n  - diamond_leggings\r\n  - diamond_boots\r\n  - gold_helmet\r\n  - gold_chestplate\r\n  - gold_leggings\r\n  - gold_boots\r\n  - flint\r\n  - pork\r\n  - grilled_pork\r\n  - painting\r\n  - golden_apple\r\n  - sign\r\n  - wood_door\r\n  - bucket\r\n  - water_bucket\r\n  - lava_bucket\r\n  - minecart\r\n  - saddle\r\n  - iron_door\r\n  - redstone\r\n  - snow_ball\r\n  - boat\r\n  - leather\r\n  - milk_bucket\r\n  - clay_brick\r\n  - clay_ball\r\n  - sugar_cane\r\n  - paper\r\n  - book\r\n  - slime_ball\r\n  - storage_minecart\r\n  - powered_minecart\r\n  - egg\r\n  - compass\r\n  - fishing_rod\r\n  - watch\r\n  - glowstone_dust\r\n  - raw_fish\r\n  - cooked_fish\r\n  - ink_sack\r\n  - bone\r\n  - sugar\r\n  - cake\r\n  - bed\r\n  - diode\r\n  - cookie\r\n  - map\r\n  - shears\r\n  - melon\r\n  - pumpkin_seeds\r\n  - melon_seeds\r\n  - raw_beef\r\n  - cooked_beef\r\n  - raw_chicken\r\n  - cooked_chicken\r\n  - rotten_flesh\r\n  - ender_pearl\r\n  - blaze_rod\r\n  - ghast_tear\r\n  - gold_nugget\r\n  - nether_stalk\r\n  - potion\r\n  - glass_bottle\r\n  - spider_eye\r\n  - fermented_spider_eye\r\n  - blaze_powder\r\n  - magma_cream\r\n  - brewing_stand_item\r\n  - cauldron_item\r\n  - eye_of_ender\r\n  - speckled_melon\r\n  - monster_egg\r\n  - exp_bottle\r\n  - fireball\r\n  - book_and_quill\r\n  - written_book\r\n  - emerald\r\n  - item_frame\r\n  - flower_pot_item\r\n  - carrot_item\r\n  - potato_item\r\n  - baked_potato\r\n  - poisonous_potato\r\n  - empty_map\r\n  - golden_carrot\r\n  - skull_item\r\n  - carrot_stick\r\n  - nether_star\r\n  - pumpkin_pie\r\n  - firework\r\n  - firework_charge\r\n  - enchanted_book\r\n  - redstone_comparator\r\n  - nether_brick_item\r\n  - quartz\r\n  - explosive_minecart\r\n  - hopper_minecart\r\n  - prismarine_shard\r\n  - prismarine_crystals\r\n  - rabbit\r\n  - cooked_rabbit\r\n  - rabbit_stew\r\n  - rabbit_foot\r\n  - rabbit_hide\r\n  - armor_stand\r\n  - iron_barding\r\n  - gold_barding\r\n  - diamond_barding\r\n  - leash\r\n  - name_tag\r\n  - command_minecart\r\n  - mutton\r\n  - cooked_mutton\r\n  - banner\r\n  - end_crystal\r\n  - spruce_door_item\r\n  - birch_door_item\r\n  - jungle_door_item\r\n  - acacia_door_item\r\n  - dark_oak_door_item\r\n  - chorus_fruit\r\n  - chorus_fruit_popped\r\n  - beetroot\r\n  - beetroot_seeds\r\n  - beetroot_soup\r\n  - dragons_breath\r\n  - splash_potion\r\n  - spectral_arrow\r\n  - tipped_arrow\r\n  - lingering_potion\r\n  - shield\r\n  - elytra\r\n  - boat_spruce\r\n  - boat_birch\r\n  - boat_jungle\r\n  - boat_acacia\r\n  - boat_dark_oak\r\n  - gold_record\r\n  - green_record\r\n  - record_3\r\n  - record_4\r\n  - record_5\r\n  - record_6\r\n  - record_7\r\n  - record_8\r\n  - record_9\r\n  - record_10\r\n  - record_11\r\n  - record_12\r\n  - \r\n  - ### Minecraft 1.9\r\n  - \r\n  - air\r\n  - stone\r\n  - grass\r\n  - dirt\r\n  - cobblestone\r\n  - wood\r\n  - sapling\r\n  - bedrock\r\n  - water\r\n  - stationary_water\r\n  - lava\r\n  - stationary_lava\r\n  - sand\r\n  - gravel\r\n  - gold_ore\r\n  - iron_ore\r\n  - coal_ore\r\n  - log\r\n  - leaves\r\n  - sponge\r\n  - glass\r\n  - lapis_ore\r\n  - lapis_block\r\n  - dispenser\r\n  - sandstone\r\n  - note_block\r\n  - bed_block\r\n  - powered_rail\r\n  - detector_rail\r\n  - piston_sticky_base\r\n  - web\r\n  - long_grass\r\n  - dead_bush\r\n  - piston_base\r\n  - piston_extension\r\n  - wool\r\n  - piston_moving_piece\r\n  - yellow_flower\r\n  - red_rose\r\n  - brown_mushroom\r\n  - red_mushroom\r\n  - gold_block\r\n  - iron_block\r\n  - double_step\r\n  - step\r\n  - brick\r\n  - tnt\r\n  - bookshelf\r\n  - mossy_cobblestone\r\n  - obsidian\r\n  - torch\r\n  - fire\r\n  - mob_spawner\r\n  - wood_stairs\r\n  - chest\r\n  - redstone_wire\r\n  - diamond_ore\r\n  - diamond_block\r\n  - workbench\r\n  - crops\r\n  - soil\r\n  - furnace\r\n  - burning_furnace\r\n  - sign_post\r\n  - wooden_door\r\n  - ladder\r\n  - rails\r\n  - cobblestone_stairs\r\n  - wall_sign\r\n  - lever\r\n  - stone_plate\r\n  - iron_door_block\r\n  - wood_plate\r\n  - redstone_ore\r\n  - glowing_redstone_ore\r\n  - redstone_torch_off\r\n  - redstone_torch_on\r\n  - stone_button\r\n  - snow\r\n  - ice\r\n  - snow_block\r\n  - cactus\r\n  - clay\r\n  - sugar_cane_block\r\n  - jukebox\r\n  - fence\r\n  - pumpkin\r\n  - netherrack\r\n  - soul_sand\r\n  - glowstone\r\n  - portal\r\n  - jack_o_lantern\r\n  - cake_block\r\n  - diode_block_off\r\n  - diode_block_on\r\n  - stained_glass\r\n  - trap_door\r\n  - monster_eggs\r\n  - smooth_brick\r\n  - huge_mushroom_1\r\n  - huge_mushroom_2\r\n  - iron_fence\r\n  - thin_glass\r\n  - melon_block\r\n  - pumpkin_stem\r\n  - melon_stem\r\n  - vine\r\n  - fence_gate\r\n  - brick_stairs\r\n  - smooth_stairs\r\n  - mycel\r\n  - water_lily\r\n  - nether_brick\r\n  - nether_fence\r\n  - nether_brick_stairs\r\n  - nether_warts\r\n  - enchantment_table\r\n  - brewing_stand\r\n  - cauldron\r\n  - ender_portal\r\n  - ender_portal_frame\r\n  - ender_stone\r\n  - dragon_egg\r\n  - redstone_lamp_off\r\n  - redstone_lamp_on\r\n  - wood_double_step\r\n  - wood_step\r\n  - cocoa\r\n  - sandstone_stairs\r\n  - emerald_ore\r\n  - ender_chest\r\n  - tripwire_hook\r\n  - tripwire\r\n  - emerald_block\r\n  - spruce_wood_stairs\r\n  - birch_wood_stairs\r\n  - jungle_wood_stairs\r\n  - command\r\n  - beacon\r\n  - cobble_wall\r\n  - flower_pot\r\n  - carrot\r\n  - potato\r\n  - wood_button\r\n  - skull\r\n  - anvil\r\n  - trapped_chest\r\n  - gold_plate\r\n  - iron_plate\r\n  - redstone_comparator_off\r\n  - redstone_comparator_on\r\n  - daylight_detector\r\n  - redstone_block\r\n  - quartz_ore\r\n  - hopper\r\n  - quartz_block\r\n  - quartz_stairs\r\n  - activator_rail\r\n  - dropper\r\n  - stained_clay\r\n  - stained_glass_pane\r\n  - leaves_2\r\n  - log_2\r\n  - acacia_stairs\r\n  - dark_oak_stairs\r\n  - slime_block\r\n  - barrier\r\n  - iron_trapdoor\r\n  - prismarine\r\n  - sea_lantern\r\n  - hay_block\r\n  - carpet\r\n  - hard_clay\r\n  - coal_block\r\n  - packed_ice\r\n  - double_plant\r\n  - standing_banner\r\n  - wall_banner\r\n  - daylight_detector_inverted\r\n  - red_sandstone\r\n  - red_sandstone_stairs\r\n  - double_stone_slab2\r\n  - stone_slab2\r\n  - spruce_fence_gate\r\n  - birch_fence_gate\r\n  - jungle_fence_gate\r\n  - dark_oak_fence_gate\r\n  - acacia_fence_gate\r\n  - spruce_fence\r\n  - birch_fence\r\n  - jungle_fence\r\n  - dark_oak_fence\r\n  - acacia_fence\r\n  - spruce_door\r\n  - birch_door\r\n  - jungle_door\r\n  - acacia_door\r\n  - dark_oak_door\r\n  - end_rod\r\n  - chorus_plant\r\n  - chorus_flower\r\n  - purpur_block\r\n  - purpur_pillar\r\n  - purpur_stairs\r\n  - purpur_double_slab\r\n  - purpur_slab\r\n  - end_bricks\r\n  - beetroot_block\r\n  - grass_path\r\n  - end_gateway\r\n  - command_repeating\r\n  - command_chain\r\n  - frosted_ice\r\n  - structure_block\r\n  - iron_spade\r\n  - iron_pickaxe\r\n  - iron_axe\r\n  - flint_and_steel\r\n  - apple\r\n  - bow\r\n  - arrow\r\n  - coal\r\n  - diamond\r\n  - iron_ingot\r\n  - gold_ingot\r\n  - iron_sword\r\n  - wood_sword\r\n  - wood_spade\r\n  - wood_pickaxe\r\n  - wood_axe\r\n  - stone_sword\r\n  - stone_spade\r\n  - stone_pickaxe\r\n  - stone_axe\r\n  - diamond_sword\r\n  - diamond_spade\r\n  - diamond_pickaxe\r\n  - diamond_axe\r\n  - stick\r\n  - bowl\r\n  - mushroom_soup\r\n  - gold_sword\r\n  - gold_spade\r\n  - gold_pickaxe\r\n  - gold_axe\r\n  - string\r\n  - feather\r\n  - sulphur\r\n  - wood_hoe\r\n  - stone_hoe\r\n  - iron_hoe\r\n  - diamond_hoe\r\n  - gold_hoe\r\n  - seeds\r\n  - wheat\r\n  - bread\r\n  - leather_helmet\r\n  - leather_chestplate\r\n  - leather_leggings\r\n  - leather_boots\r\n  - chainmail_helmet\r\n  - chainmail_chestplate\r\n  - chainmail_leggings\r\n  - chainmail_boots\r\n  - iron_helmet\r\n  - iron_chestplate\r\n  - iron_leggings\r\n  - iron_boots\r\n  - diamond_helmet\r\n  - diamond_chestplate\r\n  - diamond_leggings\r\n  - diamond_boots\r\n  - gold_helmet\r\n  - gold_chestplate\r\n  - gold_leggings\r\n  - gold_boots\r\n  - flint\r\n  - pork\r\n  - grilled_pork\r\n  - painting\r\n  - golden_apple\r\n  - sign\r\n  - wood_door\r\n  - bucket\r\n  - water_bucket\r\n  - lava_bucket\r\n  - minecart\r\n  - saddle\r\n  - iron_door\r\n  - redstone\r\n  - snow_ball\r\n  - boat\r\n  - leather\r\n  - milk_bucket\r\n  - clay_brick\r\n  - clay_ball\r\n  - sugar_cane\r\n  - paper\r\n  - book\r\n  - slime_ball\r\n  - storage_minecart\r\n  - powered_minecart\r\n  - egg\r\n  - compass\r\n  - fishing_rod\r\n  - watch\r\n  - glowstone_dust\r\n  - raw_fish\r\n  - cooked_fish\r\n  - ink_sack\r\n  - bone\r\n  - sugar\r\n  - cake\r\n  - bed\r\n  - diode\r\n  - cookie\r\n  - map\r\n  - shears\r\n  - melon\r\n  - pumpkin_seeds\r\n  - melon_seeds\r\n  - raw_beef\r\n  - cooked_beef\r\n  - raw_chicken\r\n  - cooked_chicken\r\n  - rotten_flesh\r\n  - ender_pearl\r\n  - blaze_rod\r\n  - ghast_tear\r\n  - gold_nugget\r\n  - nether_stalk\r\n  - potion\r\n  - glass_bottle\r\n  - spider_eye\r\n  - fermented_spider_eye\r\n  - blaze_powder\r\n  - magma_cream\r\n  - brewing_stand_item\r\n  - cauldron_item\r\n  - eye_of_ender\r\n  - speckled_melon\r\n  - monster_egg\r\n  - exp_bottle\r\n  - fireball\r\n  - book_and_quill\r\n  - written_book\r\n  - emerald\r\n  - item_frame\r\n  - flower_pot_item\r\n  - carrot_item\r\n  - potato_item\r\n  - baked_potato\r\n  - poisonous_potato\r\n  - empty_map\r\n  - golden_carrot\r\n  - skull_item\r\n  - carrot_stick\r\n  - nether_star\r\n  - pumpkin_pie\r\n  - firework\r\n  - firework_charge\r\n  - enchanted_book\r\n  - redstone_comparator\r\n  - nether_brick_item\r\n  - quartz\r\n  - explosive_minecart\r\n  - hopper_minecart\r\n  - prismarine_shard\r\n  - prismarine_crystals\r\n  - rabbit\r\n  - cooked_rabbit\r\n  - rabbit_stew\r\n  - rabbit_foot\r\n  - rabbit_hide\r\n  - armor_stand\r\n  - iron_barding\r\n  - gold_barding\r\n  - diamond_barding\r\n  - leash\r\n  - name_tag\r\n  - command_minecart\r\n  - mutton\r\n  - cooked_mutton\r\n  - banner\r\n  - end_crystal\r\n  - spruce_door_item\r\n  - birch_door_item\r\n  - jungle_door_item\r\n  - acacia_door_item\r\n  - dark_oak_door_item\r\n  - chorus_fruit\r\n  - chorus_fruit_popped\r\n  - beetroot\r\n  - beetroot_seeds\r\n  - beetroot_soup\r\n  - dragons_breath\r\n  - splash_potion\r\n  - spectral_arrow\r\n  - tipped_arrow\r\n  - lingering_potion\r\n  - shield\r\n  - elytra\r\n  - boat_spruce\r\n  - boat_birch\r\n  - boat_jungle\r\n  - boat_acacia\r\n  - boat_dark_oak\r\n  - gold_record\r\n  - green_record\r\n  - record_3\r\n  - record_4\r\n  - record_5\r\n  - record_6\r\n  - record_7\r\n  - record_8\r\n  - record_9\r\n  - record_10\r\n  - record_11\r\n  - record_12"},7800:function(e,r,n){},"802f":function(e,r){e.exports="    InventoryRows:\r\n      type: simple:integer\r\n      optional: true\r\n      description: 'This property is optional. This setting allows increasing the size of an inventory without needing to add a shopitem to the bottom row.'\r\n"},ba6c:function(e,r){e.exports="            \"Sound.ShopItem.Click\":\r\n              type: simple:string\r\n              optional: true\r\n              description: 'This property is optional. It allows overwriting the sound effect of the shop item, which is played, when the shop item is clicked.'\r\n            \"Sound.ShopItem.Purchase\":\r\n              type: simple:string\r\n              optional: true\r\n              description: 'This property is optional. It allows overwriting the sound effect of the shop item, which is played, when the shop item is purchased.'\r\n            \"Sound.ShopItem.NoPermission\":\r\n              type: simple:string\r\n              optional: true\r\n              description: 'This property is optional. It allows overwriting the sound effect of the shop item, which is played, when the shop item is clicked, but the player does not have enough permissions for it.'\r\n            \"Sound.ShopItem.NotEnoughMoney\":\r\n              type: simple:string\r\n              optional: true\r\n              description: 'This property is optional. It allows overwriting the sound effect of the shop item, which is played, when the shop item is clicked, but the player cannot afford paying the price.'"},c026:function(e,r){e.exports="            ForceInput:\r\n              type: simple_autocomplete:inputtype\r\n              optional: true\r\n              description: 'This property is optional. You can force players to input their own text or to select an online player. The input is stored and can be accessed using the \"%input%\" placeholder.'\r\n            ForceInputMessage:\r\n              type: simple:string\r\n              optional: true\r\n              description: 'If you force input from the player, this is the message sent to the player, before he has to enter input.'"},c939:function(e,r){e.exports='# Existing ElementTypes:\r\n# none, string, boolean, double, integer, list_string, item, material, potioneffect, enchantment, list_item, rewardtype, pricetype\r\nshop:\r\n  type: complex\r\n  description: Your shop\r\n  properties:\r\n    ShopName:\r\n      type: simple:string\r\n      description: Name/id of the shop.\r\n    DisplayName:\r\n      type: simple:string_formatted\r\n      description: Display name/title of the shop shown in the GUI.\r\n    Command:\r\n      type: simple:string\r\n      optional: true\r\n      description: \'Zero, one or more commands (separated by colon), which allow players with the corresponding permissions to directly open this shop. You can leave this empty. Examples: "warp" or "warp:warps"\'\r\n    \'signs.text\':\r\n      type: simple:string_formatted\r\n      optional: true\r\n      description: "If you want players to be able to open this shop via signs, this is the text the first line of a sign needs to end with. Otherwise remove this setting from the config file."\r\n    \'signs.NeedsPermissionToCreateSign\':\r\n      type: simple:boolean\r\n      optional: true\r\n      description: "Set this to true, if only players with the proper permissions should be able to create signs that open this shop."'},cd49:function(e,r,n){"use strict";n.r(r);n("e792");var t=n("2b0e"),o=n("ce5b"),i=n.n(o);n("bf40");t["default"].use(i.a,{theme:{primary:"#00ACC1",secondary:"#BDBDBD",accent:"#00ACC1"},iconfont:"md"});var a,s=function(){var e=this,r=e.$createElement,n=e._self._c||r;return n("v-app",{attrs:{dark:""}},[n("v-toolbar",[n("v-toolbar-title",[e._v("BossShopPro Editor")])],1),n("v-container",{attrs:{fluid:""}},[n("v-layout",{attrs:{row:""}},[n("v-flex",{attrs:{xs6:""}},[n("config-edit")],1),n("v-flex",{attrs:{xs1:""}},[n("v-divider",{staticStyle:{"margin-left":"50%","margin-right":"50%"},attrs:{vertical:""}})],1),n("v-flex",{attrs:{xs5:""}},[n("quick-edit")],1)],1)],1),n("v-snackbar",[e._v("I am an error")])],1)},l=[],p=n("9ab4"),c=n("60a3"),_=function(){var e=this,r=e.$createElement,n=e._self._c||r;return n("div",[n("h1",{staticClass:"mb-3"},[e._v("Configuration Assistant")]),n("v-breadcrumbs",{staticClass:"pl-0",attrs:{items:e.breadcrumbsItems},scopedSlots:e._u([{key:"item",fn:function(r){var t=r.item;return n("v-breadcrumbs-item",{nativeOn:{click:function(r){e.navigate(t.index)}}},[e._v("\n            "+e._s(t.name)+"\n        ")])}}])},[n("v-icon",{attrs:{slot:"divider"},slot:"divider"},[e._v("chevron_right")])],1),n("v-btn",{directives:[{name:"show",rawName:"v-show",value:e.type.deleteable,expression:"type.deleteable"}],staticClass:"ml-0 mb-3",attrs:{block:"",color:"red"},on:{click:e.remove}},[n("v-icon",[e._v("delete")]),e._v("\n        Delete\n    ")],1),n("v-divider",{staticClass:"mb-3"}),e.editableProperties.length>0?n("v-form",e._l(e.editableProperties,function(r){return n("qe-property",{key:r.configKey,attrs:{type:r.resolvedType,name:r.configKey,value:e.getValue(r.configKey)},on:{input:function(n){e.update(r.configKey,n)},"change-path":function(n){e.changePath(r.configKey,n)}}})}),1):n("v-alert",{attrs:{value:!0,type:"info"}},[e._v("This property is not supported.")])],1)},d=[],h=n("2ef0"),u=n.n(h);(function(e){e[e["Simple"]=0]="Simple",e[e["Simple_Autocomplete"]=1]="Simple_Autocomplete",e[e["Complex"]=2]="Complex",e[e["List_Complex"]=3]="List_Complex",e[e["Dependent"]=4]="Dependent"})(a||(a={}));var m=function(){function e(e,r,n,t){void 0===n&&(n=!1),void 0===t&&(t=!1),this.class=a.Simple,this.name=e,this.description=r,this.renameable=n,this.deleteable=t}return e}(),g=function(e){function r(r,n,t){var o=e.call(this,r,n)||this;return o.class=a.Simple_Autocomplete,o.possibilities=t,o}return p["d"](r,e),r}(m),b=function(e){function r(r,n,t,o){var i=e.call(this,r,n,t)||this;return i.dependentConfigKey=o,i}return p["d"](r,e),r}(g),f=function(){function e(e,r,n,t,o){void 0===t&&(t=!1),void 0===o&&(o=!1),this.class=a.Complex,this.name=e,this.description=r,this.properties=n,this.renameable=t,this.deleteable=o}return e}(),y=function(){function e(e,r,n,t,o,i,s){void 0===i&&(i=!1),void 0===s&&(s=!1),this.class=a.List_Complex,this.name=e,this.description=r,this.type=n,this.renameable=i,this.deleteable=s,this.defaultElement=t,this.elementInfoFunction=o}return e.prototype.getElementDisplayInformation=function(e,r){return this.elementInfoFunction(e,r)},e}(),w=function(){function e(e,r,n,t,o,i){void 0===o&&(o=!1),void 0===i&&(i=!1),this.class=a.Dependent,this.name=e,this.description=r,this.renameable=o,this.deleteable=i,this.dependencyConfigKey=n,this.dependencyToElementType=t}return e}(),k=function(){var e=this,r=e.$createElement,n=e._self._c||r;return n("v-tooltip",{attrs:{top:"",right:"","open-delay":0}},[n("v-icon",{staticClass:"ml-3",staticStyle:{cursor:"pointer"},attrs:{slot:"activator"},slot:"activator"},[e._v("help_outline")]),e._v("\n    "+e._s(e.description)+"\n")],1)},v=[],x=function(e){function r(){return null!==e&&e.apply(this,arguments)||this}return p["d"](r,e),p["c"]([Object(c["b"])({type:String})],r.prototype,"description",void 0),r=p["c"]([c["a"]],r),r}(c["c"]),S=x,E=S,T=n("2877"),I=Object(T["a"])(E,k,v,!1,null,null,null);I.options.__file="PropertyDescription.vue";var P=I.exports,O=function(){var e=this,r=e.$createElement,n=e._self._c||r;return n("v-combobox",{attrs:{label:e.name,value:e.value,items:e.possibilities},on:{change:function(r){e.$emit("input",r)}}})},C=[],L=function(e){function r(){return null!==e&&e.apply(this,arguments)||this}return p["d"](r,e),p["c"]([Object(c["b"])({type:String})],r.prototype,"name",void 0),p["c"]([Object(c["b"])({type:String})],r.prototype,"value",void 0),p["c"]([Object(c["b"])({type:Array})],r.prototype,"possibilities",void 0),r=p["c"]([c["a"]],r),r}(c["c"]),N=L,j=N,A=Object(T["a"])(j,O,C,!1,null,null,null);A.options.__file="AutocompleteProperty.vue";var R=A.exports,M=function(){var e=this,r=e.$createElement,n=e._self._c||r;return n("v-checkbox",{attrs:{label:e.name,"input-value":e.boolValue},on:{change:function(r){e.$emit("input",!!r)}}})},z=[],B=function(e){function r(){return null!==e&&e.apply(this,arguments)||this}return p["d"](r,e),Object.defineProperty(r.prototype,"boolValue",{get:function(){return"boolean"===typeof this.value?this.value:"true"===this.value},enumerable:!0,configurable:!0}),p["c"]([Object(c["b"])({type:String})],r.prototype,"name",void 0),p["c"]([Object(c["b"])({type:[String,Boolean]})],r.prototype,"value",void 0),r=p["c"]([c["a"]],r),r}(c["c"]),$=B,D=$,U=Object(T["a"])(D,M,z,!1,null,null,null);U.options.__file="BooleanProperty.vue";var q=U.exports,W=function(){var e=this,r=e.$createElement,n=e._self._c||r;return n("div",[n("v-layout",{attrs:{row:""}},[n("v-flex",{staticClass:"mr-1",attrs:{xs8:"","align-self-center":""}},[n("h3",[e._v(e._s(e.name))])]),n("v-flex",{staticClass:"ml-1",attrs:{xs4:""}},[n("v-btn",{staticClass:"mr-0",attrs:{outline:"",block:"",color:"primary"},on:{click:e.addItem}},[n("v-icon",[e._v("add")]),e._v("\n                Add Item\n            ")],1)],1)],1),e._l(e.value,function(r,t){return n("div",{key:t},[n("v-layout",{attrs:{row:""}},[n("v-flex",{staticClass:"mr-1",attrs:{xs8:""}},[n("complex-property",{attrs:{name:t},on:{"change-path":function(r){e.changePath(t)}}})],1),n("v-flex",{staticClass:"ml-1",attrs:{xs4:""}},[n("v-btn",{attrs:{block:"",outline:"",color:"red"},on:{click:function(r){e.removeItem(t)}}},[n("v-icon",[e._v("delete")]),e._v("\n                    Delete\n                ")],1)],1)],1)],1)})],2)},H=[],F=function(){var e=this,r=e.$createElement,n=e._self._c||r;return n("v-btn",{attrs:{block:"",flat:"",color:"primary"},on:{click:function(r){e.$emit("change-path")}}},[e._v(e._s(e.name))])},G=[],Y=function(e){function r(){return null!==e&&e.apply(this,arguments)||this}return p["d"](r,e),p["c"]([Object(c["b"])({type:String})],r.prototype,"name",void 0),r=p["c"]([c["a"]],r),r}(c["c"]),K=Y,V=K,J=Object(T["a"])(V,F,G,!1,null,null,null);J.options.__file="ComplexProperty.vue";var X=J.exports,Q=function(e){function r(){return null!==e&&e.apply(this,arguments)||this}return p["d"](r,e),r.prototype.addItem=function(){var e,r,n=0;do{r="NewItem"+(n||""),n++}while((this.value||{})[r]);this.$emit("input",p["a"]({},this.value,(e={},e[r]=JSON.parse(JSON.stringify(this.type.defaultElement)),e)))},r.prototype.removeItem=function(e){var r=JSON.parse(JSON.stringify(this.value));delete r[e],this.$emit("input",r)},r.prototype.changePath=function(e){this.$emit("change-path",[e])},p["c"]([Object(c["b"])({type:String})],r.prototype,"name",void 0),p["c"]([Object(c["b"])({type:Object})],r.prototype,"value",void 0),p["c"]([Object(c["b"])({type:Object})],r.prototype,"type",void 0),r=p["c"]([Object(c["a"])({components:{ComplexProperty:X}})],r),r}(c["c"]),Z=Q,ee=Z,re=Object(T["a"])(ee,W,H,!1,null,null,null);re.options.__file="ComplexListProperty.vue";var ne=re.exports,te=function(){var e=this,r=e.$createElement,n=e._self._c||r;return n("div",[n("v-layout",{attrs:{row:""}},[n("v-flex",{attrs:{xs8:"","align-self-center":""}},[n("h3",[e._v(e._s(e.name))])]),n("v-flex",{attrs:{xs4:""}},[n("v-btn",{staticClass:"mr-0",staticStyle:{float:"right"},attrs:{outline:"",small:"",color:"primary"},on:{click:e.addItem}},[e._v("Add Item")])],1)],1),e.isSingleItem?n("v-layout",{attrs:{row:""}},[n("v-flex",{attrs:{xs12:""}},[n("item-property",{attrs:{name:"Item #1",value:e.singleItem},on:{input:function(r){e.$emit("input",r)}}})],1)],1):e._l(e.value,function(r,t){return n("div",{key:t},[n("v-layout",{attrs:{row:""}},[n("v-flex",{staticClass:"mr-1",attrs:{xs8:""}},[n("item-property",{attrs:{name:"Item #"+(t+1),value:r},on:{input:function(r){e.handleItemInput(t,r)}}})],1),n("v-flex",{staticClass:"ml-1",attrs:{xs4:""}},[n("v-btn",{attrs:{block:"",color:"red"},on:{click:function(r){e.removeItem(t)}}},[n("v-icon",[e._v("delete")]),e._v("\n                    Delete\n                ")],1)],1)],1)],1)})],2)},oe=[],ie=n("b8ab"),ae=n.n(ie),se=n("e710"),le=n.n(se),pe=n("edf3"),ce=n.n(pe),_e=n("802f"),de=n.n(_e),he=n("44df"),ue=n.n(he),me=n("148c"),ge=n.n(me),be=n("d83f"),fe=n.n(be),ye=n("c026"),we=n.n(ye),ke=n("4306"),ve=n.n(ke),xe=n("ba6c"),Se=n.n(xe),Ee=n("c939"),Te=n.n(Ee),Ie=n("0d1f"),Pe=n.n(Ie),Oe=n("5c30"),Ce=n.n(Oe),Le=n("4f0b"),Ne=n.n(Le),je=n("7623"),Ae=n.n(je),Re=function(){function e(){this.etItemshop=!1,this.etItemshopAdv=!1,this.etShopAdvShop=!1,this.etShopAdvShopItem=!1,this.etConditions=!0,this.etClickTypes=!1,this.etPlayerInput=!1,this.etSoundsShop=!1,this.etSoundsShopItem=!1,this.dataEtShop=Te.a,this.dataEtShopItem=Pe.a,this.dataEtShopConditions=ge.a,this.dataEtShopPlayerInput=we.a,this.dataEtShopClickTypes=fe.a,this.dataEtShopAdvShopItem=ue.a,this.dataEtShopSoundsShopItem=Se.a,this.dataEtShopAdvShop=de.a,this.dataEtShopSoundsShop=ve.a,this.dataEtItemShop=ce.a,this.dataEtItemShopAdv=le.a,this.dataItemProperties=Ce.a,this.dataEnBsp=Ne.a,this.dataEnMc=Ae.a,this.updatedElementTypes=!0,this.updatedItemProperties=!0,this.updatedEnums=!0}return e.prototype.update=function(){this.updatedElementTypes=!0,this.updatedItemProperties=!0,this.updatedEnums=!0},e.prototype.wasUpdatedElementTypes=function(e){var r=this.updatedElementTypes;return e&&(this.updatedElementTypes=!1),r},e.prototype.wasUpdatedItemProperties=function(e){var r=this.updatedItemProperties;return e&&(this.updatedItemProperties=!1),r},e.prototype.wasUpdatedEnums=function(e){var r=this.updatedEnums;return e&&(this.updatedEnums=!1),r},Object.defineProperty(e.prototype,"elementTypesConfig",{get:function(){var e=[];return e.push(this.dataEtShop),e.push(this.dataEtShopItem),this.etConditions&&e.push(this.dataEtShopConditions),this.etPlayerInput&&e.push(this.dataEtShopPlayerInput),this.etClickTypes&&e.push(this.dataEtShopClickTypes),this.etShopAdvShopItem&&e.push(this.dataEtShopAdvShopItem),this.etSoundsShopItem&&e.push(this.dataEtShopSoundsShopItem),this.etShopAdvShop&&e.push(this.dataEtShopAdvShop),this.etSoundsShop&&e.push(this.dataEtShopSoundsShop),this.etItemshop&&e.push(this.dataEtItemShop),this.etItemshopAdv&&e.push(this.dataEtItemShopAdv),ae.a.parse(e.join("\r\n"))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"itemPropertiesConfig",{get:function(){return ae.a.parse(this.dataItemProperties)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"enumsConfig",{get:function(){var e=[this.dataEnBsp,this.dataEnMc];return ae.a.parse(e.join("\r\n"))},enumerable:!0,configurable:!0}),e}(),Me=new Re,ze=function(){function e(){this.m=new Map}return Object.defineProperty(e.prototype,"map",{get:function(){var e,r;if(!Me.wasUpdatedEnums(!0))return this.m;console.log("generating new enums.");var n=Me.enumsConfig;this.m.clear();try{for(var t=p["g"](Object.keys(n)),o=t.next();!o.done;o=t.next()){var i=o.value,a=u.a.at(n,[i])[0];this.m.set(i,a)}}catch(s){e={error:s}}finally{try{o&&!o.done&&(r=t.return)&&r.call(t)}finally{if(e)throw e.error}}return this.m},enumerable:!0,configurable:!0}),e.prototype.get=function(e){return this.map.get(e)},e}(),Be=new ze,$e=function(){function e(){this.elementTypeSpecialNames=["item","shopitemlist"],this.m=new Map}return Object.defineProperty(e.prototype,"map",{get:function(){var e,r;if(!Me.wasUpdatedElementTypes(!0))return this.m;console.log("generating new element types.");var n=Me.elementTypesConfig,t=[];this.m.clear();try{for(var o=p["g"](Object.keys(n)),i=o.next();!i.done;i=o.next()){var a=i.value,s=this.loadElementType(u.a.at(n,[a])[0],a,this.m);this.m.set(s.name.toLowerCase(),s),t.push(s)}}catch(l){e={error:l}}finally{try{i&&!i.done&&(r=o.return)&&r.call(o)}finally{if(e)throw e.error}}return this.m},enumerable:!0,configurable:!0}),e.prototype.has=function(e){return this.map.has(e.toLowerCase())},e.prototype.get=function(e){if(!this.map.has(e.toLowerCase()))throw new Error("ElementType with name '"+e+"' not found.");return this.map.get(e.toLowerCase())},e.prototype.loadElementType=function(e,r,n){var t,o,i,a,s=u.a.at(e,["type"])[0];if("complex"===s){var l=[],c=u.a.at(e,["properties"])[0];try{for(var _=p["g"](Object.keys(c)),d=_.next();!d.done;d=_.next()){var h=d.value,k=this.loadElementType(u.a.at(c,[h])[0],h,n);n.set(k.name.toLowerCase(),k);var v=u.a.at(c,[h])[0],x=!!u.a.has(v,["optional"])&&u.a.at(v,["optional"])[0],S=u.a.has(v,["configKey"])?u.a.at(v,["configKey"])[0]:h,E={configKey:S,optional:x,type:k};l.push(E)}}catch(G){t={error:G}}finally{try{d&&!d.done&&(o=_.return)&&o.call(_)}finally{if(t)throw t.error}}var T=u.a.has(e,["name"])?u.a.at(e,["name"])[0]:r,I=u.a.at(e,["description"])[0],P=!!u.a.has(e,["renameable"])&&u.a.at(e,["renamable"])[0],O=!!u.a.has(e,["deleteable"])&&u.a.at(e,["deleteable"])[0];return new f(T,I,l,P,O)}if(s.startsWith("simple:")){var C=s.split(":")[1],L=(I=u.a.at(e,["description"])[0],new m(C,I));return L}if(s.startsWith("simple_autocomplete:")){C=s.split(":")[1],I=u.a.at(e,["description"])[0];var N=u.a.at(e,["autocomplete"])[0],j=Be.get(N);L=new g(C,I,j);return L}if(s.startsWith("simple_autocomplete_dependency:")){C=s.split(":")[1],I=u.a.at(e,["description"])[0],N=u.a.at(e,["autocomplete"])[0],j=Be.get(N);var A=u.a.at(e,["dependent"])[0];L=new b(C,I,j,A);return L}if(s.startsWith("existing:"))return this.get(s.split(":")[1]);if("dependent"===s){var R=u.a.at(e,["dependency"])[0],M=new Map,z=u.a.at(e,["map"])[0];try{for(var B=p["g"](Object.keys(z)),$=B.next();!$.done;$=B.next()){var D=$.value,U=(v=u.a.at(z,[D])[0],this.loadElementType(v,D,n));n.set(U.name.toLowerCase(),U),M.set(D,U)}}catch(Y){i={error:Y}}finally{try{$&&!$.done&&(a=B.return)&&a.call(B)}finally{if(i)throw i.error}}T=u.a.has(e,["name"])?u.a.at(e,["name"])[0]:r,I=u.a.at(e,["description"])[0],P=!!u.a.has(e,["renameable"])&&u.a.at(e,["renamable"])[0],O=!!u.a.has(e,["deleteable"])&&u.a.at(e,["deleteable"])[0];return new w(T,I,R,M,P,O)}if("complexlist"===s){var q=u.a.at(e,["elements"])[0],W=Object.keys(q)[0];L=this.loadElementType(u.a.at(q,[W])[0],W,n);n.set(L.name.toLowerCase(),L);var H=function(e,r){return r},F=(T=u.a.has(e,["name"])?u.a.at(e,["name"])[0]:r,I=u.a.at(e,["description"])[0],P=!!u.a.has(e,["renameable"])&&u.a.at(e,["renamable"])[0],O=!!u.a.has(e,["deleteable"])&&u.a.at(e,["deleteable"])[0],u.a.at(e,["default"])[0]);return new y(T,I,L,F,H,P,O)}throw Error("Unknown ElementType type: ' "+s+"'.")},e}(),De=new $e,Ue=function(){var e=this,r=e.$createElement,n=e._self._c||r;return n("div",[n("v-btn",{attrs:{block:"",color:"primary"},on:{click:function(r){e.open=!0}}},[e._v("Edit "+e._s(e.name))]),n("v-dialog",{attrs:{"max-width":"700px"},model:{value:e.open,callback:function(r){e.open=r},expression:"open"}},[n("v-card",[n("v-card-title",{staticClass:"headline",attrs:{"primary-title":""}},[e._v("Edit "+e._s(e.name))]),n("v-card-text",[n("v-window",{model:{value:e.window,callback:function(r){e.window=r},expression:"window"}},[n("v-window-item",{attrs:{value:0}},[n("v-text-field",{attrs:{"append-outer-icon":"add",label:"Item Property To Add",type:"text"},on:{"click:append-outer":e.addCustomProperty},model:{value:e.text,callback:function(r){e.text=r},expression:"text"}}),n("v-list",{staticClass:"mb-4",attrs:{"two-line":""}},e._l(e.entries,function(r,t){return n("v-list-tile",{key:t},[n("v-list-tile-content",[n("v-list-tile-title",[e._v(e._s(r[1]?r[1]+":"+r[0]:r[0]))])],1),n("v-list-tile-action",[n("div",[n("v-btn",{staticClass:"mr-2",attrs:{icon:"",ripple:""},on:{click:function(r){e.edit(t)}}},[n("v-icon",{attrs:{color:"secondary"}},[e._v("edit")])],1),n("v-btn",{attrs:{icon:"",ripple:""},on:{click:function(r){e.remove(t)}}},[n("v-icon",{attrs:{color:"secondary"}},[e._v("delete")])],1)],1)])],1)}),1),n("v-divider",{staticClass:"mb-3"}),n("h3",{staticClass:"mb-1"},[e._v("Available Properties")]),n("v-list",{attrs:{"three-line":""}},e._l(e.availableProperties,function(r,t){return n("v-list-tile",{key:r.name,on:{click:function(r){e.addProperty(t)}}},[n("v-list-tile-content",[n("v-list-tile-title",[e._v(e._s(r.name))]),n("v-list-tile-sub-title",{domProps:{innerHTML:e._s(r.infotext)}})],1)],1)}),1)],1),n("v-window-item",{attrs:{value:1}},[n("item-property",{key:e.editingIndex,attrs:{property:e.selectedProperty},model:{value:e.tempValue,callback:function(r){e.tempValue=r},expression:"tempValue"}}),n("v-btn",{staticClass:"ml-0",attrs:{color:"primary"},on:{click:e.save}},[e._v("Save")])],1)],1)],1)],1)],1)],1)},qe=[],We=function(){function e(){this.a=[]}return Object.defineProperty(e.prototype,"values",{get:function(){var e,r;if(!Me.wasUpdatedItemProperties(!0))return this.a;console.log("generating new item properties.");var n=Me.itemPropertiesConfig;this.a=[];try{for(var t=p["g"](n),o=t.next();!o.done;o=t.next()){var i=o.value;this.a.push(this.loadItemProperty(i))}}catch(a){e={error:a}}finally{try{o&&!o.done&&(r=t.return)&&r.call(t)}finally{if(e)throw e.error}}return this.a},enumerable:!0,configurable:!0}),e.prototype.loadItemProperty=function(e){var r,n,t=u.a.at(e,["name"])[0],o=u.a.at(e,["key"])[0],i=u.a.at(e,["definition"])[0],a=u.a.at(e,["infotext"])[0],s=u.a.at(e,["content"])[0],l=[];try{for(var c=p["g"](s),_=c.next();!_.done;_=c.next()){var d=_.value,h=this.loadItemPropertyElement(d);l.push(h)}}catch(m){r={error:m}}finally{try{_&&!_.done&&(n=c.return)&&n.call(c)}finally{if(r)throw r.error}}return{name:t,key:o,definition:i,infotext:a,content:l}},e.prototype.loadItemPropertyElement=function(e){var r=u.a.at(e,["displayname"])[0],n=u.a.at(e,["type"])[0],t=u.a.at(e,["default"])[0],o=u.a.at(e,["description"])[0];if(n.startsWith("simple:")){var i=n.split(":")[1],a=new m(i,o);return{displayname:r,type:a,default:t,description:o}}if(n.startsWith("simple_autocomplete:")){i=n.split(":")[1];var s=u.a.at(e,["autocomplete"])[0],l=Be.get(s);a=new g(i,o,l);return{displayname:r,type:a,default:t,description:o}}throw Error("Unknown ElementType type: ' "+n+"' for item property.")},e}(),He=new We,Fe=function(){var e=this,r=e.$createElement,n=e._self._c||r;return n("v-layout",[e.formatted?n("v-flex",{attrs:{shrink:"","align-self-center":""}},[n("v-tooltip",{attrs:{disabled:!e.value,top:"",color:"black","open-delay":0}},[n("v-icon",{staticClass:"mr-3",staticStyle:{cursor:"pointer"},attrs:{slot:"activator"},slot:"activator"},[e._v("visibility")]),n("mc-text",{attrs:{text:e.value}})],1)],1):e._e(),n("v-flex",{attrs:{grow:""}},[n("v-text-field",{attrs:{label:e.name,value:e.value},on:{input:function(r){e.$emit("input",r)}}})],1)],1)},Ge=[],Ye=(n("7800"),"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"),Ke=function(e){function r(){return null!==e&&e.apply(this,arguments)||this}return p["d"](r,e),r.prototype.render=function(e){if(this.text){var r,n=/([&][0-9a-fk-or])?([^&]*)/gm,t=[this.generateEmptyBlock()];while(null!==(r=n.exec(this.text))){r.index===n.lastIndex&&n.lastIndex++;var o=t[t.length-1];r[1]&&(/^[0-9a-f]$/.test(r[1][1])?(o.text&&(o=this.cloneBlock(o),t.push(o)),o.color=r[1][1]):/^[k-o]$/.test(r[1][1])?(o.text&&(o=this.cloneBlock(o),t.push(o)),o.style.includes(r[1][1])||o.style.push(r[1][1])):"&r"===r[1]&&(o.text?(o=this.generateEmptyBlock(),t.push(o)):(o.style=[],o.color=void 0))),o.text+=r[2]}var i=t.map(function(r){return e("span",{class:r.style.concat(r.color||[]).map(function(e){return"mc-"+e}),attrs:{"data-length":r.text.length.toString()}},r.text)});return e("span",{class:"mc-preview"},i)}},r.prototype.mounted=function(){var e=this;this.timer=setInterval(function(){e.updateObfuscated()},50)},r.prototype.beforeDestroy=function(){clearInterval(this.timer)},r.prototype.updateObfuscated=function(){var e,r;if(1===this.$el.nodeType){var n=this.$el.getElementsByClassName("mc-k");try{for(var t=p["g"](n),o=t.next();!o.done;o=t.next()){var i=o.value,a=i.getAttribute("data-length");a&&(i.textContent=this.generateRandomString(parseInt(a,10)))}}catch(s){e={error:s}}finally{try{o&&!o.done&&(r=t.return)&&r.call(t)}finally{if(e)throw e.error}}}},r.prototype.generateEmptyBlock=function(){return{text:"",style:[]}},r.prototype.cloneBlock=function(e){return{color:e.color,style:e.style.slice(),text:""}},r.prototype.generateRandomString=function(e){for(var r="",n=0;n<e;n++)r+=Ye.charAt(Math.floor(Math.random()*Ye.length));return r},p["c"]([Object(c["b"])({type:String})],r.prototype,"text",void 0),r=p["c"]([c["a"]],r),r}(c["c"]),Ve=Ke,Je=function(e){function r(){return null!==e&&e.apply(this,arguments)||this}return p["d"](r,e),p["c"]([Object(c["b"])({type:String})],r.prototype,"name",void 0),p["c"]([Object(c["b"])({type:String})],r.prototype,"value",void 0),p["c"]([Object(c["b"])({type:Boolean,default:!1})],r.prototype,"formatted",void 0),r=p["c"]([Object(c["a"])({components:{McText:Ve}})],r),r}(c["c"]),Xe=Je,Qe=Xe,Ze=Object(T["a"])(Qe,Fe,Ge,!1,null,null,null);Ze.options.__file="StringProperty.vue";var er=Ze.exports,rr=function(e){function r(){return null!==e&&e.apply(this,arguments)||this}return p["d"](r,e),Object.defineProperty(r.prototype,"splitValue",{get:function(){if(!this.property)return[];for(var e=(this.value||"").split("#"),r=0;r<this.property.content.length;r++)e[r]=e[r]||"";return e},enumerable:!0,configurable:!0}),r.prototype.updateListener=function(e,r){var n=this.splitValue.slice();n[e]=""+r,this.$emit("input",n.join("#"))},r.prototype.render=function(e){var r=this;if(this.property){var n=this.property,t=n.content.map(function(n,t){try{var o=n.type;if(!o)throw new Error;return e(Mr,{props:{type:o,name:n.displayname,value:r.splitValue[t],noCard:!0},on:{input:function(e){return r.updateListener(t,e)}}})}catch(i){return e(er,{props:{name:n.displayname,value:r.splitValue[t]},on:{input:function(e){return r.updateListener(t,e)}}})}});return t.push(e("h3",{class:"mt-3"},"Definition"),e("p",n.definition),e("h3","Description"),e("p",n.infotext)),e("div",t)}return e(er,{props:{name:"Edit value",value:this.$props.value},on:this.$listeners})},p["c"]([Object(c["b"])()],r.prototype,"property",void 0),p["c"]([Object(c["b"])({type:String})],r.prototype,"value",void 0),r=p["c"]([c["a"]],r),r}(c["c"]),nr=rr,tr=/(.*?):(.*)/,or=function(e){function r(){var r=null!==e&&e.apply(this,arguments)||this;return r.window=0,r.open=!1,r.text="",r.editingIndex=-1,r.tempValue=null,r.availableProperties=He.values,r}return p["d"](r,e),Object.defineProperty(r.prototype,"entries",{get:function(){return this.value?this.value.map(function(e){var r=tr.exec(e);return r&&3===r.length?[r[2],r[1]]:[e,""]}):[]},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"selectedProperty",{get:function(){if(this.editingIndex>=0){var e=this.entries[this.editingIndex][1];if(e)return this.availableProperties.find(function(r){return r.key===e})}},enumerable:!0,configurable:!0}),r.prototype.addCustomProperty=function(){var e=(this.value||[]).concat([this.text]);this.$emit("input",e),this.text=""},r.prototype.addProperty=function(e){return p["b"](this,void 0,void 0,function(){var r,n;return p["e"](this,function(t){switch(t.label){case 0:return r=this.availableProperties[e],n=r.content.map(function(e){return e.default}).join("#"),this.$emit("input",(this.value||[]).concat([r.key+":"+n])),[4,this.$nextTick()];case 1:return t.sent(),this.value&&this.value.length?this.edit(this.value.length-1):this.window=0,[2]}})})},r.prototype.edit=function(e){this.editingIndex=e,this.tempValue=this.entries[e][0],this.window=1},r.prototype.save=function(){var e=this.editingIndex,r=this.value.slice(0);r[e]=this.entries[e][1]+":"+this.tempValue,this.$emit("input",r),this.window=0,this.editingIndex=-1},r.prototype.remove=function(e){var r=this.value.slice(0);r.splice(e,1),this.$emit("input",r)},p["c"]([Object(c["b"])({type:String})],r.prototype,"name",void 0),p["c"]([Object(c["b"])({type:Array})],r.prototype,"value",void 0),r=p["c"]([Object(c["a"])({components:{"item-property":nr}})],r),r}(c["c"]),ir=or,ar=ir,sr=Object(T["a"])(ar,Ue,qe,!1,null,null,null);sr.options.__file="ItemProperty.vue";var lr=sr.exports,pr=function(e){function r(){var r=null!==e&&e.apply(this,arguments)||this;return r.listItemType=De.get("list_item"),r}return p["d"](r,e),Object.defineProperty(r.prototype,"isSingleItem",{get:function(){return this.value&&(this.value.some(function(e){return"string"===typeof e})||1===this.value.length)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"singleItem",{get:function(){return Array.isArray(this.value[0])?this.value[0]:this.value},enumerable:!0,configurable:!0}),r.prototype.addItem=function(){var e=JSON.parse(JSON.stringify(this.listItemType.defaultElement)),r=this.value;this.isSingleItem&&r&&!Array.isArray(r[0])?r=[r]:r||(r=[]),r.push(e),this.$emit("input",r)},r.prototype.removeItem=function(e){var r=this.value.slice();r.splice(e,1),this.$emit("input",r)},r.prototype.handleItemInput=function(e,r){var n=this.value.slice();n[e]=r,this.$emit("input",n)},p["c"]([Object(c["b"])({type:String})],r.prototype,"name",void 0),p["c"]([Object(c["b"])({type:Array})],r.prototype,"value",void 0),r=p["c"]([Object(c["a"])({components:{ItemProperty:lr}})],r),r}(c["c"]),cr=pr,_r=cr,dr=Object(T["a"])(_r,te,oe,!1,null,null,null);dr.options.__file="ItemlistProperty.vue";var hr=dr.exports,ur=function(){var e=this,r=e.$createElement,n=e._self._c||r;return n("v-text-field",{attrs:{type:"number",label:e.name,value:e.value},on:{input:e.input}})},mr=[],gr=function(e){function r(){return null!==e&&e.apply(this,arguments)||this}return p["d"](r,e),Object.defineProperty(r.prototype,"sanitizedValue",{get:function(){switch(typeof this.value){case"string":return this.floating?Number.parseFloat(this.value):Number.parseInt(this.value,10);case"number":return this.value;default:return 0}},enumerable:!0,configurable:!0}),r.prototype.input=function(e){this.floating?this.$emit("input",parseFloat(e)):this.$emit("input",parseInt(e,10))},p["c"]([Object(c["b"])({type:String})],r.prototype,"name",void 0),p["c"]([Object(c["b"])()],r.prototype,"value",void 0),p["c"]([Object(c["b"])({type:Boolean})],r.prototype,"floating",void 0),r=p["c"]([c["a"]],r),r}(c["c"]),br=gr,fr=br,yr=Object(T["a"])(fr,ur,mr,!1,null,null,null);yr.options.__file="NumberProperty.vue";var wr=yr.exports,kr=function(){var e=this,r=e.$createElement,n=e._self._c||r;return n("div",[n("v-btn",{attrs:{block:"",color:"primary"},on:{click:function(r){e.open=!0}}},[e._v("Edit ShopItemList")]),n("v-dialog",{attrs:{"max-width":"700px"},model:{value:e.open,callback:function(r){e.open=r},expression:"open"}},[n("v-card",[n("v-card-title",{staticClass:"headline",attrs:{"primary-title":""}},[e._v("ShopItemList")]),n("v-card-text",[e._l(6,function(r){return n("v-layout",{key:r,attrs:{row:""}},[n("v-layout",{attrs:{"align-center":"","justify-center":""}},e._l(9,function(t){return n("v-card",{key:t,staticClass:"ma-2 qe-shopitem",attrs:{color:e.items[9*(r-1)+t]?"primary":"secondary"},nativeOn:{click:function(n){e.navigate(9*(r-1)+t)}}},[n("v-card-text",{staticStyle:{"text-align":"center"}},[e._v("\n                                "+e._s(e.items[9*(r-1)+t]?9*(r-1)+t:"+")+"\n                            ")])],1)}),1)],1)}),n("div",{staticClass:"mb-4"})],2)],1)],1)],1)},vr=[],xr=function(e){function r(){var r=null!==e&&e.apply(this,arguments)||this;return r.open=!1,r.silType=De.get("shopitemlist"),r}return p["d"](r,e),Object.defineProperty(r.prototype,"items",{get:function(){var e=Array(36);if(this.value){var r=[];u.a.forIn(this.value,function(n,t){"undefined"!==typeof n.InventoryLocation?e[n.InventoryLocation]=t:r.push(t)}),r.forEach(function(r){var n=u.a.findIndex(e,function(e){return!!e});e[n]=r})}return e},enumerable:!0,configurable:!0}),r.prototype.navigate=function(e){var r;if(this.open=!1,this.items[e])this.$emit("change-path",[this.items[e]]);else{var n=JSON.parse(JSON.stringify(this.silType.defaultElement));u.a.set(n,"InventoryLocation",e),this.$emit("input",p["a"]({},this.value,(r={},r[e.toString()]=n,r))),this.$emit("change-path",[e.toString()])}},p["c"]([Object(c["b"])({type:String})],r.prototype,"name",void 0),p["c"]([Object(c["b"])({type:Object})],r.prototype,"value",void 0),r=p["c"]([c["a"]],r),r}(c["c"]),Sr=xr,Er=Sr,Tr=(n("57fc"),Object(T["a"])(Er,kr,vr,!1,null,null,null));Tr.options.__file="ShopitemlistProperty.vue";var Ir=Tr.exports,Pr=function(){var e=this,r=e.$createElement,n=e._self._c||r;return n("div",[n("h3",[e._v(e._s(e.name))]),n("v-text-field",{attrs:{"append-outer-icon":"add",label:"Add Property",type:"text"},on:{"click:append-outer":e.add},model:{value:e.text,callback:function(r){e.text=r},expression:"text"}}),n("v-list",{attrs:{"two-line":""}},e._l(e.entries,function(r,t){return n("v-list-tile",{key:t},[n("v-list-tile-content",[n("v-list-tile-title",[e._v(e._s(r[0]))]),n("v-list-tile-sub-title",[e._v(e._s(r[1]))])],1),n("v-list-tile-action",[n("div",[n("v-btn",{staticClass:"mr-2",attrs:{icon:"",ripple:""},on:{click:function(r){e.edit(t)}}},[n("v-icon",{attrs:{color:"secondary"}},[e._v("edit")])],1),n("v-btn",{attrs:{icon:"",ripple:""},on:{click:function(r){e.remove(t)}}},[n("v-icon",{attrs:{color:"secondary"}},[e._v("delete")])],1)],1)])],1)}),1)],1)},Or=[],Cr=/(.*?):(.*)/,Lr=function(e){function r(){var r=null!==e&&e.apply(this,arguments)||this;return r.text="",r}return p["d"](r,e),Object.defineProperty(r.prototype,"entries",{get:function(){return this.value?this.value.map(function(e){var r=Cr.exec(e);return r&&3===r.length?[r[2],r[1]]:[e,""]}):[]},enumerable:!0,configurable:!0}),r.prototype.add=function(){var e=(this.value||[]).concat([this.text]);this.$emit("input",e),this.text=""},r.prototype.edit=function(e){this.text=this.value[e],this.remove(e)},r.prototype.remove=function(e){var r=this.value.slice(0);r.splice(e,1),this.$emit("input",r)},p["c"]([Object(c["b"])({type:String})],r.prototype,"name",void 0),p["c"]([Object(c["b"])({type:Array})],r.prototype,"value",void 0),r=p["c"]([c["a"]],r),r}(c["c"]),Nr=Lr,jr=Nr,Ar=Object(T["a"])(jr,Pr,Or,!1,null,null,null);Ar.options.__file="StringlistProperty.vue";var Rr=Ar.exports,Mr=t["default"].extend({functional:!0,render:function(e,r){var n,t,o=r.props.type,i=r.props.name,s=r.props.value,l=r.props.noCard,c={};if(o.class===a.Simple)switch(o.name){case"string":n=er;break;case"string_formatted":n=er,c.formatted=!0;break;case"boolean":n=q;break;case"double":n=wr,c.floating=!0;break;case"integer":n=wr,c.floating=!1;break;case"list_string":n=Rr;break;case"item":n=lr;break}else if(o.class===a.Simple_Autocomplete)n=R,c.possibilities=o.possibilities;else if(o.class===a.Complex)switch(o.name){default:n=X;break}else if(o.class===a.List_Complex)switch(o.name){case"shopitemlist":n=Ir;break;case"list_item":n=hr;break;default:n=ne,c.type=o;break}if(n?(t=e(n,{props:p["a"]({name:i,value:s},c),on:r.listeners}),o.description&&(t=e("v-layout",[e("v-flex",{attrs:{grow:!0}},[t]),e("v-flex",{attrs:{shrink:!0,"align-self-center":!0}},[e(P,{props:{description:o.description}})])]))):"none"!==o.name&&(t=e("p","Property "+i+" with type "+o.name+" is unsupported.")),t)return l?t:e("v-card",{class:"mb-3"},[e("v-card-text",[t])])}});function zr(e){return 0===e.length?void 0:e.reduce(function(e,r){return e+("number"===typeof r?"["+r+"]":"."+r)},"").slice(1)}var Br=function(){function e(){this.shopRoot=De.get("shop")}return e.prototype.getElementType=function(e,r){return this.getElementTypeStep([],e,r,this.shopRoot)},e.prototype.getElementTypeStep=function(e,r,n,t){var o,i;if(0===r.length){switch(t.class){case a.Simple:case a.Simple_Autocomplete:case a.Complex:case a.List_Complex:return t;case a.Dependent:var s=t,l=zr(e.slice(0,-1).concat([s.dependencyConfigKey]))||"",c=u.a.at(n,[l])[0];return void 0===c?(console.log("dependency of elementtpe dependent missing, having pathText "+l+"."),De.get("none")):s.dependencyToElementType.get(c.toLowerCase())}throw new Error("Unknown ElementTypeClass: '"+t.class+"'.")}switch(t.class){case a.Simple:return console.log("Subtree root has ElementTypeClass Simple, although the end of the path is not reached yet."),De.get("none");case a.Complex:for(var _=t,d=0;d<r.length;d++){var h=r.slice(0,d+1).join(".");try{for(var m=p["g"](_.properties),g=m.next();!g.done;g=m.next()){var b=g.value;if(b.configKey===h)return this.getElementTypeStep(e.concat(r.slice(0,d+1)),r.slice(d+1),n,b.type)}}catch(y){o={error:y}}finally{try{g&&!g.done&&(i=m.return)&&i.call(m)}finally{if(o)throw o.error}}}return console.log("No property of the selected complex ElementType matches the selected path '"+e.concat(r).join(".")+"'."),De.get("none");case a.List_Complex:var f=t;return this.getElementTypeStep(e.concat(r.slice(0,1)),r.slice(1),n,f.type);case a.Dependent:}return console.log("Unknown ElementType. Probably Array element."),De.get("none")},e}(),$r=new Br,Dr=function(e){function r(){var r=null!==e&&e.apply(this,arguments)||this;return r.editableProperties=[],r}return p["d"](r,e),Object.defineProperty(r.prototype,"path",{get:function(){var e=this.$store.state.selectedPath,r=this.$store.state.config,n=!1;while(!n&&e.length>0){var t=$r.getElementType(e,r);t&&t.class===a.Complex?n=!0:e=e.slice(0,-1)}return e},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"type",{get:function(){return $r.getElementType(this.path,this.$store.state.config)},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"selectedPath",{get:function(){return this.$store.getters.pathString},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"breadcrumbsItems",{get:function(){return[{name:"Root",index:0}].concat(this.path.map(function(e,r){return{name:e.toString(),index:r+1}}))},enumerable:!0,configurable:!0}),r.prototype.updateEditableProperties=function(){var e=this;if(this.type&&this.type.class===a.Complex){var r=this.$store.state.config;this.editableProperties=this.type.properties.map(function(n){return n.resolvedType=$r.getElementType(e.path.concat([n.configKey]),r),n})}else this.editableProperties=[]},r.prototype.getValue=function(e){var r=zr(this.path.concat([e]))||"";return u.a.at(this.$store.state.config,[r])[0]},r.prototype.update=function(e,r){var n=this.path.concat([e]),t=$r.getElementType(n,this.$store.state.config);t&&t.dependentConfigKey&&this.$store.commit("applyConfig",{path:this.path.concat([t.dependentConfigKey]),newValue:void 0}),this.$store.commit("applyConfig",{path:n,newValue:r})},r.prototype.changePath=function(e,r){var n=[e];r&&n.push.apply(n,p["f"](r)),this.$store.commit("setSelectedPath",this.path.concat(n))},r.prototype.navigate=function(e){var r=this.path.length;this.$store.commit("setSelectedPath",this.path.slice(0,e-r))},r.prototype.remove=function(){this.$store.commit("deleteConfig",this.path),this.navigate(-1)},p["c"]([Object(c["d"])("type",{immediate:!0}),Object(c["d"])("$store.state.config",{deep:!0})],r.prototype,"updateEditableProperties",null),r=p["c"]([Object(c["a"])({components:{"qe-property":Mr}})],r),r}(c["c"]),Ur=Dr,qr=Ur,Wr=Object(T["a"])(qr,_,d,!1,null,null,null);Wr.options.__file="QuickEdit.vue";var Hr=Wr.exports,Fr=function(){var e=this,r=e.$createElement,n=e._self._c||r;return n("div",[n("h1",{staticClass:"mb-3"},[e._v("Shop Configuration")]),n("v-btn",{attrs:{flat:"",icon:"",color:"white"},on:{click:function(r){e.undo()}}},[n("v-icon",[e._v("undo")])],1),n("v-btn",{attrs:{flat:"",icon:"",color:"white"},on:{click:function(r){e.redo()}}},[n("v-icon",[e._v("redo")])],1),n("v-alert",{attrs:{type:e.color,value:!e.validYaml}},[e._v(e._s(e.errorMessage))]),n("div",{staticClass:"field"},[n("div",{ref:"configTextArea",staticClass:"editor editarea",attrs:{id:"editor"},on:{click:function(r){e.pushSelectionSafe()},select:function(r){e.pushSelectionSafe()},keydown:function(r){e.pushConfigSafe()}}},[e._v(e._s(e.exampleConfigText))])])],1)},Gr=[],Yr=n("651e"),Kr=n.n(Yr),Vr=n("65d9"),Jr=n.n(Vr),Xr=function(){function e(){}return e.prototype.readCommentLines=function(e){var r=new Map,n={indexLine:0,line:this.getLine(e,0)},t="$firstLine",o=[];while(n.indexLine>-1){if(this.isCommentLine(n.line))o.push(n.line);else{r.set(t,o);var i=this.getPath(e,n.indexLine);t=zr(i),o=[]}n=this.getEntryNeighbour(e,n.indexLine,!1,!0)}return r.set(t,o),r},e.prototype.writeCommentLines=function(e,r){var n=0,t=r.get("$firstLine");if(t.length>0){var o=t.join("\n");e=o+"\n"+e,n=o.length}var i={indexLine:n,line:this.getLine(e,0)};while(i.indexLine>-1){var a=this.getPath(e,i.indexLine),s=zr(a);if(r.has(s)&&(t=r.get(s),t.length>0)){var l=e.indexOf("\n",i.indexLine);-1===l&&(l=e.length);o=t.join("\n");i.indexLine+=o.length,e=e.substring(0,l)+"\n"+o+e.substring(l)}i=this.getEntryNeighbour(e,i.indexLine,!1,!0)}return e},e.prototype.getPath=function(e,r,n){if(void 0===n&&(n=-1),void 0===r)throw new Error("Unable to get path: indexLine undefined.");var t=this.getLine(e,r);if(0===t.length)return[];if(this.isCommentLine(t))return[];var o=this.cutPathText(t);if(o.startsWith("-")){var i=this.getEntryNeighbour(e,r,!0,!1);return this.getPath(e,i.indexLine,n+1)}if(0===this.getLevel(t))return[o];var a=this.getEntryParent(e,r);if(-1===a.indexLine)throw new Error("Line '"+t+"' with index '"+r+"' is not at level 0 but does not have parent.");var s=this.getPath(e,a.indexLine);return s.push(o),n>-1&&s.push(n),s},e.prototype.getLine=function(e,r){var n=e.substring(0,r).lastIndexOf("\n");-1===n?n=0:n+=1;var t=e.indexOf("\n",r);return-1===t&&(t=e.length),e.substring(n,t)},e.prototype.getLevel=function(e){return e.search(/\S/)/2},e.prototype.cutPathText=function(e){e=e.replace(/'|"/g,"");var r=this.getLevel(e),n=e.indexOf(":");return-1===n?e.substring(2*r):e.substring(2*r,n)},e.prototype.getEntryParent=function(e,r){var n=this,t=this.getLine(e,r),o=this.getLevel(t),i=o-1;if(i<0)return{indexLine:-1,line:void 0};var a=function(e,r){var t=n.getLevel(r);return t===i};return this.getEntryNeighbourSpecific(e,r,!0,!1,a)},e.prototype.getEntryNeighbourSpecific=function(e,r,n,t,o){var i=this.getEntryNeighbour(e,r,n,t);while(-1!==i.indexLine){if(o(i.indexLine,i.line))return i;i=this.getEntryNeighbour(e,i.indexLine,n,t)}return{indexLine:-1,line:void 0}},e.prototype.getEntryNeighbour=function(e,r,n,t){if(n){var o=e.substring(0,r).lastIndexOf("\n")-1;if(-2!==o){var i=this.getLine(e,o);return!t&&this.isCommentLine(i)?this.getEntryNeighbour(e,o,n,t):{indexLine:o,line:i}}}else{o=e.substring(r).indexOf("\n")+r+1;if(o!==-1+r+1){i=this.getLine(e,o);return!t&&this.isCommentLine(i)?this.getEntryNeighbour(e,o,n,t):{indexLine:o,line:i}}}return{indexLine:-1,line:void 0}},e.prototype.isCommentLine=function(e){return 0===e.replace(/\s/g,"").length||e.replace(/\s/g,"").startsWith("#")},e}(),Qr=new Xr,Zr=function(){function e(){}return e.prototype.getPath=function(e,r,n){if(void 0===n&&(n=-1),void 0===r)throw new Error("Unable to get path: indexLine undefined.");var t=this.getLine(e,r);if(0===t.length)return[];if(this.isCommentLine(t))return[];var o=this.cutPathText(t);if(o.startsWith("-")){var i=this.getPosNeighbour(e,r,!0,!1);return this.getPath(e,i,n+1)}if(0===this.getLevel(t))return[o];var a=this.getPosParent(e,r);if(-1===a.row)throw new Error("Line '"+t+"' with index '"+a.row+"' is not at level 0 but does not have parent.");var s=this.getPath(e,a);return s.push(o),n>-1&&s.push(n),s},e.prototype.getPos=function(e,r,n){if(void 0===n&&(n={row:-1,column:-1}),0===r.length)return n;for(var t=0;t<r.length;t++){var o=r.slice(0,t+1).join("."),i=this.getPosChild(e,n,o);if(-1!==i.row)return this.getPos(e,r.slice(t+1),i)}return{row:-1,column:-1}},e.prototype.getPathDuplicate=function(e){var r=[],n={row:0,column:0};while(n.column>-1){var t=this.getLine(e,n);if(!this.isCommentLine(t)){var o=this.getPath(e,n),i=zr(o);if(r.indexOf(i)>-1)return i;r.push(i)}n=this.getPosNeighbour(e,n,!1,!1)}},e.prototype.cutPathText=function(e){e=e.replace(/'|"/g,"");var r=this.getLevel(e),n=e.indexOf(":");return-1===n?e.substring(2*r):e.substring(2*r,n)},e.prototype.getLine=function(e,r){return e.getSession().doc.getLine(r.row)},e.prototype.getLevel=function(e){return e.search(/\S/)/2},e.prototype.getPosParent=function(e,r){var n=this,t=this.getLine(e,r),o=this.getLevel(t),i=o-1;if(i<0)return{row:0,column:0};var a=function(r){var t=n.getLine(e,r),o=n.getLevel(t);return o===i};return this.getPosNeighbourSpecific(e,r,!0,!1,a)},e.prototype.getPosChild=function(e,r,n){var t=this,o=0;if(-1!==r.row){var i=this.getLine(e,r),a=this.getLevel(i);o=a+1}var s=function(r){var i=t.getLine(e,r),a=t.getLevel(i);return a===o&&t.cutPathText(i)===n};return this.getPosNeighbourSpecific(e,r,!1,!1,s)},e.prototype.getPosNeighbourSpecific=function(e,r,n,t,o){var i=this.getPosNeighbour(e,r,n,t);while(-1!==i.row){if(o(i))return i;i=this.getPosNeighbour(e,i,n,t)}return{row:-1,column:-1}},e.prototype.getPosNeighbour=function(e,r,n,t){if(n){if(r.row>0){var o={row:r.row-1,column:0};return!t&&this.isCommentLine(this.getLine(e,o))?this.getPosNeighbour(e,o,n,t):o}return{row:-1,column:-1}}if(e.getSession().doc.getLength()>r.row){o={row:r.row+1,column:0};return!t&&this.isCommentLine(this.getLine(e,o))?this.getPosNeighbour(e,o,n,t):o}return{row:-1,column:-1}},e.prototype.isCommentLine=function(e){return 0===e.replace(/\s/g,"").length||e.replace(/\s/g,"").startsWith("#")},e}(),en=new Zr,rn=n("7167"),nn=n.n(rn),tn=n("061c"),on=(n("2968"),n("14d4"),function(e){function r(){var r=null!==e&&e.apply(this,arguments)||this;return r.configObject={},r.commentLines=new Map,r.selectedPath=[],r.functionUpdateSelectionSlow=u.a.debounce(r.pushSelection,300),r.functionUpdateSelectionFast=u.a.throttle(r.pushSelection,200),r.functionUpdateConfig=u.a.debounce(r.pushConfig,300),r.functionPullConfig=u.a.debounce(r.pullConfig,700),r.functionPullSelection=u.a.debounce(r.pullSelection,50),r.validYaml=!0,r.errorMessage="",r.externalChanges=!1,r}return p["d"](r,e),Object.defineProperty(r.prototype,"color",{get:function(){return this.validYaml?"success":"error"},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"editor",{get:function(){return tn["edit"]("editor")},enumerable:!0,configurable:!0}),r.prototype.configText=function(){return this.editor.getValue()},Object.defineProperty(r.prototype,"exampleConfigText",{get:function(){return nn.a},enumerable:!0,configurable:!0}),r.prototype.mounted=function(){var e=this,r=this.editor;r.$blockScrolling=1/0,r.setPrintMarginColumn(-1),r.getSession().setMode("ace/mode/yaml"),r.setTheme("ace/theme/monokai");var n=this;r.on("focus",function(){e.externalChanges=!1}),r.getSession().on("change",function(){n.pushConfigSafe()}),r.on("mousedown",function(){n.pushSelectionSafe()}),this.pushConfig()},r.prototype.pushSelectionSafe=function(){this.externalChanges||this.functionUpdateSelectionFast.call(this)},r.prototype.pushConfig=function(){try{var e=en.getPathDuplicate(this.editor);if(void 0!==e)return this.errorMessage="Duplicate config keys: '"+e+"'.",void(this.validYaml=!1);this.configObject=Kr.a.safeLoad(this.configText()),this.validYaml=!0,this.errorMessage="Your shop looks good.";var r=JSON.parse(JSON.stringify(this.configObject));this.commentLines=Qr.readCommentLines(this.editor.getValue()),this.$store.commit("applyConfig",{path:[],newValue:r}),this.pushSelection()}catch(n){return this.errorMessage="Not valid YAML syntax.",void(this.validYaml=!1)}},r.prototype.pushConfigSafe=function(){this.externalChanges||this.functionUpdateConfig.call(this)},r.prototype.pushSelection=function(){this.selectedPath=en.getPath(this.editor,this.editor.getCursorPosition()),this.$store.commit("setSelectedPath",this.selectedPath)},r.prototype.pullConfigSafe=function(){this.pullConfig.call(this)},r.prototype.pullConfig=function(){if(!u.a.isEqual(this.$store.state.config,this.configObject)){var e=JSON.parse(JSON.stringify(this.$store.state.config));this.configObject=e;var r=Kr.a.safeDump(this.configObject,{indent:2,flowLevel:-1});r=r.substring(0,r.length-1),r!==this.configText()&&(this.externalChanges=!0,this.editor.setValue(Qr.writeCommentLines(r,this.commentLines),-1))}},r.prototype.pullSelectionSafe=function(){this.functionPullSelection.call(this)},r.prototype.pullSelection=function(){if(this.$store.state.selectedPath!==this.selectedPath){var e=en.getPos(this.editor,this.$store.state.selectedPath);-1!==e.row&&(this.editor.gotoLine(e.row+1),this.editor.setHighlightActiveLine(!0))}},r.prototype.undo=function(){this.editor.undo()},r.prototype.redo=function(){this.editor.redo()},Object.defineProperty(r.prototype,"canUndo",{get:function(){return!!document.getElementById("editor")&&this.editor.getSession().getUndoManager().hasUndo()},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"canRedo",{get:function(){return!!document.getElementById("editor")&&this.editor.getSession().getUndoManager().hasRedo()},enumerable:!0,configurable:!0}),p["c"]([Object(c["d"])("$store.state.config",{deep:!0})],r.prototype,"pullConfigSafe",null),p["c"]([Object(c["d"])("$store.state.selectedPath")],r.prototype,"pullSelectionSafe",null),r=p["c"]([Jr.a],r),r}(t["default"])),an=on,sn=an,ln=(n("6cef"),Object(T["a"])(sn,Fr,Gr,!1,null,null,null));ln.options.__file="ConfigEdit.vue";var pn=ln.exports,cn=function(e){function r(){return null!==e&&e.apply(this,arguments)||this}return p["d"](r,e),r=p["c"]([Object(c["a"])({components:{"quick-edit":Hr,"config-edit":pn}})],r),r}(c["c"]),_n=cn,dn=_n,hn=Object(T["a"])(dn,s,l,!1,null,null,null);hn.options.__file="App.vue";var un=hn.exports,mn=n("8c4f");t["default"].use(mn["a"]);var gn=new mn["a"]({routes:[]}),bn=n("2f62");t["default"].use(bn["a"]);var fn=new bn["a"].Store({state:{config:{},selectedPath:[]},getters:{pathString:function(e){return zr(e.selectedPath)},selectedType:function(e){return $r.getElementType(e.selectedPath,e.config)}},mutations:{applyConfig:function(e,r){var n=r.path,o=r.newValue,i=zr(n);if(i){var a=JSON.parse(JSON.stringify(e.config));u.a.set(a,i,o),t["default"].set(e,"config",a)}else e.config=o},deleteConfig:function(e,r){var n=r.slice(),o=n.pop(),i=zr(n);i&&t["default"].delete(u.a.at(e.config,i)[0],o)},setSelectedPath:function(e,r){e.selectedPath=r}},actions:{}});t["default"].config.productionTip=!1,new t["default"]({router:gn,store:fn,render:function(e){return e(un)}}).$mount("#app")},d83f:function(e,r){e.exports='            RewardType_right:\r\n              type: simple_autocomplete_dependency:rewardtype_right\r\n              autocomplete: rewardtype\r\n              dependent: Reward_right\r\n              description: Type of reward the player will receive by clicking this shopitem. For example "ITEM".\r\n            Reward_right:\r\n              type: dependent\r\n              dependency: RewardType_right\r\n              description: The actual reward. If your RewardType is "ITEM" the reward could be for example one diamond pickaxe.\r\n              map:\r\n                bungeecordcommand:\r\n                  type: simple:list_string\r\n                  description: List of commands executed by the BungeeCord server. Requires BungeeCord and a copy of BSP being run as BungeeCord plugin.\r\n                bungeecordserver:\r\n                  type: simple:string\r\n                  description: Name of the BungeeCord server to send the player to. Requires BungeeCord.\r\n                close: \r\n                  type: simple:none\r\n                  description: The shop will be closed. No Reward required.\r\n                command:\r\n                  type: simple:list_string\r\n                  description: \'List of commands executed by the console. Tip: You can use placeholders, like "%player%" for the player name.\'\r\n                custom:\r\n                  type: simple:none\r\n                  description: Custom Reward using BossShopPro API.\r\n                enchantment:\r\n                  type: simple:string\r\n                  description: Enchantment which will be added to the item in the players main hand.\r\n                exp:\r\n                  type: simple:integer\r\n                  description: EXP level to be added to the player.\r\n                item:\r\n                  name: list_item\r\n                  type: complexlist\r\n                  description: List of items the player will receive.\r\n                  default:\r\n                    - type:STONE\r\n                    - amount:16\r\n                  elements:\r\n                    item:\r\n                      type: simple:item\r\n                      description: One item.\r\n                itemall:\r\n                  type: simple:item\r\n                  description: When clicking this shop item the player will fill his inventory with items of this type. He will pay the defined price for every item.\r\n                money:\r\n                  type: simple:double\r\n                  description: The amount of money the player will receive.\r\n                nothing:\r\n                  type: simple:none\r\n                  description: \'Nothing: No reward will be given to the player.\'\r\n                permission:\r\n                  type: simple:list_string\r\n                  description: List of permissions that will be given to the player.\r\n                playercommand:\r\n                  type: simple:list_string\r\n                  description: List of commands that will be executed in the name of the player with the permissions of the player.\r\n                playercommandop:\r\n                  type: simple:list_string\r\n                  description: List of commands that will be executed in the name of the player with the permissions of an Op.\r\n                points:\r\n                  type: simple:double\r\n                  description: Amount of points the player will receive.\r\n                shop:\r\n                  type: simple:string\r\n                  description: The BossShopPro shop the player will be sent to.\r\n                shoppage:\r\n                  type: simple:string\r\n                  description: \'The page of the shop which will be opened. Possible values: <Any page number>, next, previous\'\r\n            PriceType_right:\r\n              type: simple_autocomplete_dependency:pricetype_right\r\n              autocomplete: pricetype_right\r\n              dependent: Price_right\r\n              description: Type of price the player will pay when clicking this shopitem, to receive the reward. For example "MONEY".\r\n            Price_right:\r\n              type: dependent\r\n              dependency: PriceType_right\r\n              description: The actual price. If your PriceType is "MONEY" the price could be for example "100".\r\n              map:\r\n                exp:\r\n                  type: simple:integer\r\n                  description: EXP level to be taken from the player.\r\n                item:\r\n                  type: complexlist\r\n                  description: List of items the player will pay.\r\n                  default:\r\n                    - type:STONE\r\n                    - amount:16\r\n                  elements:\r\n                    item:\r\n                      type: simple:item\r\n                      description: One item.\r\n                itemall:\r\n                  type: simple:item\r\n                  description: When clicking this shop item the player will sell all his items of this type. He will receive the defined reward for every item sold.\r\n                money:\r\n                  type: simple:double\r\n                  description: The amount of money the player will pay.\r\n                nothing:\r\n                  type: simple:none\r\n                  description: \'Nothing: No price will be taken from the player.\'\r\n                points:\r\n                  type: simple:double\r\n                  description: Amount of points the player will pay.\r\n            RewardType_left:\r\n              type: simple_autocomplete_dependency:rewardtype_left\r\n              autocomplete: rewardtype\r\n              dependent: Reward_left\r\n              description: Type of reward the player will receive by clicking this shopitem. For example "ITEM".\r\n            Reward_left:\r\n              type: dependent\r\n              dependency: RewardType_left\r\n              description: The actual reward. If your RewardType is "ITEM" the reward could be for example one diamond pickaxe.\r\n              map:\r\n                bungeecordcommand:\r\n                  type: simple:list_string\r\n                  description: List of commands executed by the BungeeCord server. Requires BungeeCord and a copy of BSP being run as BungeeCord plugin.\r\n                bungeecordserver:\r\n                  type: simple:string\r\n                  description: Name of the BungeeCord server to send the player to. Requires BungeeCord.\r\n                close: \r\n                  type: simple:none\r\n                  description: The shop will be closed. No Reward required.\r\n                command:\r\n                  type: simple:list_string\r\n                  description: \'List of commands executed by the console. Tip: You can use placeholders, like "%player%" for the player name.\'\r\n                custom:\r\n                  type: simple:none\r\n                  description: Custom Reward using BossShopPro API.\r\n                enchantment:\r\n                  type: simple:string\r\n                  description: Enchantment which will be added to the item in the players main hand.\r\n                exp:\r\n                  type: simple:integer\r\n                  description: EXP level to be added to the player.\r\n                item:\r\n                  name: list_item\r\n                  type: complexlist\r\n                  description: List of items the player will receive.\r\n                  default:\r\n                    - type:STONE\r\n                    - amount:16\r\n                  elements:\r\n                    item:\r\n                      type: simple:item\r\n                      description: One item.\r\n                itemall:\r\n                  type: simple:item\r\n                  description: When clicking this shop item the player will fill his inventory with items of this type. He will pay the defined price for every item.\r\n                money:\r\n                  type: simple:double\r\n                  description: The amount of money the player will receive.\r\n                nothing:\r\n                  type: simple:none\r\n                  description: \'Nothing: No reward will be given to the player.\'\r\n                permission:\r\n                  type: simple:list_string\r\n                  description: List of permissions that will be given to the player.\r\n                playercommand:\r\n                  type: simple:list_string\r\n                  description: List of commands that will be executed in the name of the player with the permissions of the player.\r\n                playercommandop:\r\n                  type: simple:list_string\r\n                  description: List of commands that will be executed in the name of the player with the permissions of an Op.\r\n                points:\r\n                  type: simple:double\r\n                  description: Amount of points the player will receive.\r\n                shop:\r\n                  type: simple:string\r\n                  description: The BossShopPro shop the player will be sent to.\r\n                shoppage:\r\n                  type: simple:string\r\n                  description: \'The page of the shop which will be opened. Possible values: <Any page number>, next, previous\'\r\n            PriceType_left:\r\n              type: simple_autocomplete_dependency:pricetype_left\r\n              autocomplete: pricetype_left\r\n              dependent: Price_left\r\n              description: Type of price the player will pay when clicking this shopitem, to receive the reward. For example "MONEY".\r\n            Price_left:\r\n              type: dependent\r\n              dependency: PriceType_left\r\n              description: The actual price. If your PriceType is "MONEY" the price could be for example "100".\r\n              map:\r\n                exp:\r\n                  type: simple:integer\r\n                  description: EXP level to be taken from the player.\r\n                item:\r\n                  type: complexlist\r\n                  description: List of items the player will pay.\r\n                  default:\r\n                    - type:STONE\r\n                    - amount:16\r\n                  elements:\r\n                    item:\r\n                      type: simple:item\r\n                      description: One item.\r\n                itemall:\r\n                  type: simple:item\r\n                  description: When clicking this shop item the player will sell all his items of this type. He will receive the defined reward for every item sold.\r\n                money:\r\n                  type: simple:double\r\n                  description: The amount of money the player will pay.\r\n                nothing:\r\n                  type: simple:none\r\n                  description: \'Nothing: No price will be taken from the player.\'\r\n                points:\r\n                  type: simple:double\r\n                  description: Amount of points the player will pay.\r\n            RewardType_middle:\r\n              type: simple_autocomplete_dependency:rewardtype_middle\r\n              autocomplete: rewardtype\r\n              dependent: Reward_middle\r\n              description: Type of reward the player will receive by clicking this shopitem. For example "ITEM".\r\n            Reward_middle:\r\n              type: dependent\r\n              dependency: RewardType_middle\r\n              description: The actual reward. If your RewardType is "ITEM" the reward could be for example one diamond pickaxe.\r\n              map:\r\n                bungeecordcommand:\r\n                  type: simple:list_string\r\n                  description: List of commands executed by the BungeeCord server. Requires BungeeCord and a copy of BSP being run as BungeeCord plugin.\r\n                bungeecordserver:\r\n                  type: simple:string\r\n                  description: Name of the BungeeCord server to send the player to. Requires BungeeCord.\r\n                close: \r\n                  type: simple:none\r\n                  description: The shop will be closed. No Reward required.\r\n                command:\r\n                  type: simple:list_string\r\n                  description: \'List of commands executed by the console. Tip: You can use placeholders, like "%player%" for the player name.\'\r\n                custom:\r\n                  type: simple:none\r\n                  description: Custom Reward using BossShopPro API.\r\n                enchantment:\r\n                  type: simple:string\r\n                  description: Enchantment which will be added to the item in the players main hand.\r\n                exp:\r\n                  type: simple:integer\r\n                  description: EXP level to be added to the player.\r\n                item:\r\n                  name: list_item\r\n                  type: complexlist\r\n                  description: List of items the player will receive.\r\n                  default:\r\n                    - type:STONE\r\n                    - amount:16\r\n                  elements:\r\n                    item:\r\n                      type: simple:item\r\n                      description: One item.\r\n                itemall:\r\n                  type: simple:item\r\n                  description: When clicking this shop item the player will fill his inventory with items of this type. He will pay the defined price for every item.\r\n                money:\r\n                  type: simple:double\r\n                  description: The amount of money the player will receive.\r\n                nothing:\r\n                  type: simple:none\r\n                  description: \'Nothing: No reward will be given to the player.\'\r\n                permission:\r\n                  type: simple:list_string\r\n                  description: List of permissions that will be given to the player.\r\n                playercommand:\r\n                  type: simple:list_string\r\n                  description: List of commands that will be executed in the name of the player with the permissions of the player.\r\n                playercommandop:\r\n                  type: simple:list_string\r\n                  description: List of commands that will be executed in the name of the player with the permissions of an Op.\r\n                points:\r\n                  type: simple:double\r\n                  description: Amount of points the player will receive.\r\n                shop:\r\n                  type: simple:string\r\n                  description: The BossShopPro shop the player will be sent to.\r\n                shoppage:\r\n                  type: simple:string\r\n                  description: \'The page of the shop which will be opened. Possible values: <Any page number>, next, previous\'\r\n            PriceType_middle:\r\n              type: simple_autocomplete_dependency:pricetype_middle\r\n              autocomplete: pricetype_middle\r\n              dependent: Price_middle\r\n              description: Type of price the player will pay when clicking this shopitem, to receive the reward. For example "MONEY".\r\n            Price_middle:\r\n              type: dependent\r\n              dependency: PriceType_middle\r\n              description: The actual price. If your PriceType is "MONEY" the price could be for example "100".\r\n              map:\r\n                exp:\r\n                  type: simple:integer\r\n                  description: EXP level to be taken from the player.\r\n                item:\r\n                  type: complexlist\r\n                  description: List of items the player will pay.\r\n                  default:\r\n                    - type:STONE\r\n                    - amount:16\r\n                  elements:\r\n                    item:\r\n                      type: simple:item\r\n                      description: One item.\r\n                itemall:\r\n                  type: simple:item\r\n                  description: When clicking this shop item the player will sell all his items of this type. He will receive the defined reward for every item sold.\r\n                money:\r\n                  type: simple:double\r\n                  description: The amount of money the player will pay.\r\n                nothing:\r\n                  type: simple:none\r\n                  description: \'Nothing: No price will be taken from the player.\'\r\n                points:\r\n                  type: simple:double\r\n                  description: Amount of points the player will pay.'},e710:function(e,r){e.exports='            PriceBuy:\r\n              type: existing:double\r\n              optional: true\r\n              description: \'Optional. Overwrites the price players pay for the item, instead of using "<priceMultiplier>*<worth>".\'\r\n            RewardSell:\r\n              type: existing:double\r\n              optional: true\r\n              description: \'Optional. Overwrites the reward players get for selling the item, instead of using "<rewardMultiplier>*<worth>".\'\r\n            AllowSell:\r\n              type: existing:boolean\r\n              optional: true\r\n              description: \'Optional. Default is "true". Allows disabling the "sell" option for the item.\'\r\n            AllowBuy:\r\n              type: existing:boolean\r\n              optional: true\r\n              description: \'Optional. Default is "true". Allows disabling the "buy" option for the item.\''},edf3:function(e,r){e.exports="    itemshopitemlist:\r\n      configKey: itemshop\r\n      type: complexlist\r\n      description: 'List of items for the ItemShop addon.'\r\n      default:  \r\n        Worth: 3.0\r\n        Item:\r\n          - type:STONE\r\n          - amount:64\r\n      elements:\r\n        item:\r\n          type: complex\r\n          deleteable: true\r\n          renameable: true\r\n          description: 'ItemShop Item.'\r\n          properties:\r\n            Worth:\r\n              type: existing:double\r\n              description: 'The worth of the item. By default when players buy the item they pay \"<priceMultiplier>*<worth>\" and when they sell the item they get \"<rewardMultiplier>*<worth>\".'\r\n            Item:\r\n              type: existing:item\r\n              description: 'The item players can buy/sell.'"}});
//# sourceMappingURL=app.84e9cb15.js.map